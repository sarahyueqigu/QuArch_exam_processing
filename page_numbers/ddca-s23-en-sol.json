{
    "pages": [
        {
            "page": 1,
            "text": "                                                                        Final Exam\n                                                 Digital Design and Computer Architecture (252-0028-00L)\n                                                                 ETH Z\u00fcrich, Spring 2023\n                                                                     Prof. Onur Mutlu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExamination Rules:\n    No books, no calculators, no computers or communication devices\n                                                                              We will not collect them\n\n\n\n\n\nTips:\n \u2022 Be cognizant of time.\n \u2022 Be concise.\n \u2022 Show work when needed.\n \u2022 Write legibly.",
            "md": "# Final Exam\n\n# Digital Design and Computer Architecture (252-0028-00L)\n\n# ETH Z\u00fcrich, Spring 2023\n\n# Prof. Onur Mutlu\n\n# Examination Rules:\n\nNo books, no calculators, no computers or communication devices\n\nWe will not collect them\n\n# Tips:\n\n- Be cognizant of time.\n- Be concise.\n- Show work when needed.\n- Write legibly.",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Final Exam",
                    "md": "# Final Exam",
                    "rows": null,
                    "bBox": {
                        "x": 257.49,
                        "y": 59.18,
                        "w": 80.6,
                        "h": 14.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Digital Design and Computer Architecture (252-0028-00L)",
                    "md": "# Digital Design and Computer Architecture (252-0028-00L)",
                    "rows": null,
                    "bBox": {
                        "x": 59.27,
                        "y": 84.48,
                        "w": 477.18,
                        "h": 17.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "ETH Z\u00fcrich, Spring 2023",
                    "md": "# ETH Z\u00fcrich, Spring 2023",
                    "rows": null,
                    "bBox": {
                        "x": 194.75,
                        "y": 116.06,
                        "w": 205.64,
                        "h": 17.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Prof. Onur Mutlu",
                    "md": "# Prof. Onur Mutlu",
                    "rows": null,
                    "bBox": {
                        "x": 251.56,
                        "y": 147.68,
                        "w": 92.63,
                        "h": 12.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Examination Rules:",
                    "md": "# Examination Rules:",
                    "rows": null,
                    "bBox": {
                        "x": 57.6,
                        "y": 480.21,
                        "w": 98.34,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "No books, no calculators, no computers or communication devices\n\nWe will not collect them",
                    "md": "No books, no calculators, no computers or communication devices\n\nWe will not collect them",
                    "rows": null,
                    "bBox": {
                        "x": 69.78,
                        "y": 516.08,
                        "w": 468.13,
                        "h": 57.82
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Tips:",
                    "md": "# Tips:",
                    "rows": null,
                    "bBox": {
                        "x": 57.6,
                        "y": 701.38,
                        "w": 25.0,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "- Be cognizant of time.\n- Be concise.\n- Show work when needed.\n- Write legibly.",
                    "md": "- Be cognizant of time.\n- Be concise.\n- Show work when needed.\n- Write legibly.",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 2,
            "text": "This page intentionally left blank",
            "md": "This page intentionally left blank",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "This page intentionally left blank",
                    "md": "This page intentionally left blank",
                    "rows": null,
                    "bBox": {
                        "x": 225.58,
                        "y": 72.0,
                        "w": 142.65,
                        "h": 10.0
                    }
                }
            ],
            "status": "WARNING",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": true,
            "noTextContent": false
        },
        {
            "page": 3,
            "text": "1    Boolean Logic Circuits           [45 points]\n A, B, C, D   A                               D\nF ib    G3\n              F ib\n                                  f(0) = 0 f(1) = 1     f(n) = f(n \u2212 1) + f(n \u2212 2)    n \u2265 2\n              G3\n\n                                     F ib       sum of products\n                                      Inputs             Outputs\n                                A     B     C     D     F ib    G3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n         F ib  ( ~~A</s> \u00b7<s>B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + (<s>A</s> \u00b7<s>B</s> \u00b7<s>C</s> \u00b7 D) + (<s>A</s> \u00b7<s>B</s> \u00b7 C \u00b7<s>D</s>) + (<s>A</s> \u00b7<s>B</s> \u00b7 C \u00b7 D) + (<s>A</s> \u00b7 B \u00b7<s>C~~   \u00b7 D) +\n         (A \u00b7 ~~B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + (A \u00b7 B \u00b7<s>C~~             \u00b7 D)",
            "md": "# 1 Boolean Logic Circuits\n\n[45 points]\n\n| A | B | C | D | F ib | G3 |\n| - | - | - | - | ---- | -- |\n\nf(0) = 0\n\nf(1) = 1\n\nf(n) = f(n \u2212 1) + f(n \u2212 2)    n \u2265 2\n\nF ib  (~~A \u00b7B \u00b7C \u00b7D) + (A \u00b7B \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~           \u00b7 D)",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "1 Boolean Logic Circuits",
                    "md": "# 1 Boolean Logic Circuits",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 219.16,
                        "h": 230.64
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "[45 points]",
                    "md": "[45 points]",
                    "rows": null,
                    "bBox": {
                        "x": 258.43,
                        "y": 70.85,
                        "w": 52.45,
                        "h": 10.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| A | B | C | D | F ib | G3 |\n| - | - | - | - | ---- | -- |",
                    "rows": [
                        [
                            "A",
                            "B",
                            "C",
                            "D",
                            "F ib",
                            "G3"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.1,
                        "h": 617.99
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "f(0) = 0\n\nf(1) = 1\n\nf(n) = f(n \u2212 1) + f(n \u2212 2)    n \u2265 2\n\nF ib  (~~A \u00b7B \u00b7C \u00b7D) + (A \u00b7B \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~           \u00b7 D)",
                    "md": "f(0) = 0\n\nf(1) = 1\n\nf(n) = f(n \u2212 1) + f(n \u2212 2)    n \u2265 2\n\nF ib  (~~A \u00b7B \u00b7C \u00b7D) + (A \u00b7B \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~           \u00b7 D)",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.1,
                        "h": 617.99
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 4,
            "text": "                  F ib\nF ib  ( ~~A</s> \u00b7<s>B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + ( ~~A</s> \u00b7<s>B~~   \u00b7<s>C</s> \u00b7 D) + (<s>A</s> \u00b7<s>B</s> \u00b7 C \u00b7<s>D</s>) + (<s>A</s> \u00b7<s>B</s> \u00b7 C \u00b7 D) + (<s>A</s> \u00b7 B \u00b7<s>C~~   \u00b7 D) +\n(A \u00b7 ~~B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + (A \u00b7 B \u00b7<s>C~~   \u00b7 D)\nF ib  (( ~~A</s>\u00b7<s>B</s>)\u00b7((<s>C</s> \u00b7<s>D</s>)+(<s>C</s> \u00b7D)+(C \u00b7<s>D</s>)+(C \u00b7D)))+(<s>A</s>\u00b7B\u00b7<s>C</s> \u00b7D)+(A\u00b7<s>B</s>\u00b7<s>C</s> \u00b7<s>D</s>)+(A\u00b7B\u00b7<s>C~~   \u00b7D)\nF ib  (( ~~A</s> \u00b7<s>B</s>) \u00b7 (1)) + (<s>A</s> \u00b7 B \u00b7<s>C</s> \u00b7 D) + (A \u00b7                <s>B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + (A \u00b7 B \u00b7<s>C~~   \u00b7 D)\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (<s>A</s> \u00b7 B \u00b7<s>C</s> \u00b7 D) + (A \u00b7<s>B</s> \u00b7             <s>C</s> \u00b7<s>D</s>) + (A \u00b7 B \u00b7<s>C~~   \u00b7 D)\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (<s>C</s>  \u00b7 ((<s>A</s> \u00b7 B \u00b7 D) + (A \u00b7<s>B</s> \u00b7         <s>D~~  ) + (A \u00b7 B \u00b7 D)))\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (<s>C</s>  \u00b7 ((B \u00b7 D) + (A \u00b7<s>B</s> \u00b7<s>D~~  )))\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (B \u00b7        <s>C</s> \u00b7 D) + (A \u00b7      <s>B</s> \u00b7<s>C</s>  \u00b7<s>D~~  )\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (A \u00b7        <s>B</s> \u00b7<s>C</s> \u00b7<s>D</s>) + (B \u00b7<s>C~~    \u00b7 D)\nF ib  ( ~~A</s> \u00b7 <s>B</s>) + (<s>B</s> \u00b7 <s>C</s> \u00b7<s>D</s>) + (B \u00b7<s>C~~      \u00b7 D)\n                                             G3                only\nG3  (A \u00b7 A) \u00b7 (B \u00b7 B)\nExplanation:\nG3  ( ~~A</s> \u00b7B \u00b7<s>C</s> \u00b7<s>D</s>)+(<s>A</s> \u00b7B \u00b7<s>C</s> \u00b7D)+(<s>A</s> \u00b7B \u00b7C \u00b7<s>D</s>)+(<s>A</s> \u00b7B \u00b7C \u00b7D)+(A \u00b7<s>B</s> \u00b7<s>C</s> \u00b7<s>D</s>)+(A \u00b7<s>B</s> \u00b7<s>C~~   \u00b7\nD)+(A \u00b7 ~~B</s>\u00b7C \u00b7<s>D</s>)+(A \u00b7<s>B</s>\u00b7C \u00b7D)+(A \u00b7B\u00b7<s>C</s> \u00b7<s>D</s>)+(A \u00b7B\u00b7<s>C</s> \u00b7D)+(A \u00b7B\u00b7C \u00b7<s>D~~  )+(A \u00b7B\u00b7C \u00b7D)\nG3  ( ~~A</s> \u00b7 B \u00b7 ((<s>C</s> \u00b7<s>D</s>) + (<s>C</s> \u00b7 D) + (C \u00b7<s>D</s>) + (C \u00b7 D))) + (A \u00b7<s>B</s> \u00b7 ((<s>C</s> \u00b7<s>D</s>) + (<s>C~~   \u00b7 D) + (C \u00b7\n ~~D</s>) + (C \u00b7 D))) + (A \u00b7 B \u00b7 ((<s>C</s> \u00b7<s>D</s>) + (<s>C</s> \u00b7 D) + (C            \u00b7<s>D~~  ) + (C \u00b7 D)))\nG3  ( ~~A</s> \u00b7 B \u00b7 (1)) + (A \u00b7           <s>B~~   \u00b7 (1)) + (A \u00b7 B \u00b7 (1))\nG3  ( ~~A</s> \u00b7 B) + (A \u00b7 <s>B~~  ) + (A \u00b7 B)\nG3  A + B\nG3  A + B\nG3    <s>A</s> \u00b7<s>B</s>\nG3  (A \u00b7 A) \u00b7 (B \u00b7 B)",
            "md": "# F ib\n\n(~~A \u00b7B \u00b7C \u00b7D) + (~~A \u00b7B~~ \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib ((~~A\u00b7B)\u00b7((C \u00b7D)+(C \u00b7D)+(C \u00b7D)+(C \u00b7D)))+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C~~ \u00b7D)\n\nF ib ((~~A \u00b7B) \u00b7 (1)) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((A \u00b7 B \u00b7 D) + (A \u00b7B \u00b7D~~) + (A \u00b7 B \u00b7 D)))\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((B \u00b7 D) + (A \u00b7B \u00b7D~~)))\n\nF ib (~~A \u00b7 B) + (B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C  \u00b7D~~)\n\nF ib (~~A \u00b7 B) + (A \u00b7B \u00b7C \u00b7D) + (B \u00b7C~~  \u00b7 D)\n\n# G3\n\n(A \u00b7 A) \u00b7 (B \u00b7 B)\n\nExplanation:\n\nG3  (~~A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7 D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D~~)+(A \u00b7B\u00b7C \u00b7D)\n\nG3  (~~A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D~~) + (C \u00b7 D)))\n\nG3  (~~A \u00b7 B \u00b7 (1)) + (A \u00b7           B~~ \u00b7 (1)) + (A \u00b7 B \u00b7 (1))\n\nG3  (~~A \u00b7 B) + (A \u00b7 B~~) + (A \u00b7 B)\n\nG3  A + B\n\nG3  A + B\n\nG3    A \u00b7B\n\nG3  (A \u00b7 A) \u00b7 (B \u00b7 B)",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "F ib",
                    "md": "# F ib",
                    "rows": null,
                    "bBox": {
                        "x": 78.65,
                        "y": 72.0,
                        "w": 342.23,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "(~~A \u00b7B \u00b7C \u00b7D) + (~~A \u00b7B~~ \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib ((~~A\u00b7B)\u00b7((C \u00b7D)+(C \u00b7D)+(C \u00b7D)+(C \u00b7D)))+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C~~ \u00b7D)\n\nF ib ((~~A \u00b7B) \u00b7 (1)) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((A \u00b7 B \u00b7 D) + (A \u00b7B \u00b7D~~) + (A \u00b7 B \u00b7 D)))\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((B \u00b7 D) + (A \u00b7B \u00b7D~~)))\n\nF ib (~~A \u00b7 B) + (B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C  \u00b7D~~)\n\nF ib (~~A \u00b7 B) + (A \u00b7B \u00b7C \u00b7D) + (B \u00b7C~~  \u00b7 D)",
                    "md": "(~~A \u00b7B \u00b7C \u00b7D) + (~~A \u00b7B~~ \u00b7C \u00b7 D) + (A \u00b7B \u00b7 C \u00b7D) + (A \u00b7B \u00b7 C \u00b7 D) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib ((~~A\u00b7B)\u00b7((C \u00b7D)+(C \u00b7D)+(C \u00b7D)+(C \u00b7D)))+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C \u00b7D)+(A\u00b7B\u00b7C~~ \u00b7D)\n\nF ib ((~~A \u00b7B) \u00b7 (1)) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (A \u00b7 B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C \u00b7D) + (A \u00b7 B \u00b7C~~ \u00b7 D)\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((A \u00b7 B \u00b7 D) + (A \u00b7B \u00b7D~~) + (A \u00b7 B \u00b7 D)))\n\nF ib (~~A \u00b7 B) + (C  \u00b7 ((B \u00b7 D) + (A \u00b7B \u00b7D~~)))\n\nF ib (~~A \u00b7 B) + (B \u00b7C \u00b7 D) + (A \u00b7B \u00b7C  \u00b7D~~)\n\nF ib (~~A \u00b7 B) + (A \u00b7B \u00b7C \u00b7D) + (B \u00b7C~~  \u00b7 D)",
                    "rows": null,
                    "bBox": {
                        "x": 78.65,
                        "y": 72.0,
                        "w": 347.93,
                        "h": 466.03
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "G3",
                    "md": "# G3",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 616.15,
                        "w": 24.13,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "(A \u00b7 A) \u00b7 (B \u00b7 B)\n\nExplanation:\n\nG3  (~~A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7 D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D~~)+(A \u00b7B\u00b7C \u00b7D)\n\nG3  (~~A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D~~) + (C \u00b7 D)))\n\nG3  (~~A \u00b7 B \u00b7 (1)) + (A \u00b7           B~~ \u00b7 (1)) + (A \u00b7 B \u00b7 (1))\n\nG3  (~~A \u00b7 B) + (A \u00b7 B~~) + (A \u00b7 B)\n\nG3  A + B\n\nG3  A + B\n\nG3    A \u00b7B\n\nG3  (A \u00b7 A) \u00b7 (B \u00b7 B)",
                    "md": "(A \u00b7 A) \u00b7 (B \u00b7 B)\n\nExplanation:\n\nG3  (~~A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7D)+(A \u00b7B \u00b7C \u00b7 D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D)+(A \u00b7B\u00b7C \u00b7D~~)+(A \u00b7B\u00b7C \u00b7D)\n\nG3  (~~A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D) + (C \u00b7 D))) + (A \u00b7 B \u00b7 ((C \u00b7D) + (C \u00b7 D) + (C \u00b7D~~) + (C \u00b7 D)))\n\nG3  (~~A \u00b7 B \u00b7 (1)) + (A \u00b7           B~~ \u00b7 (1)) + (A \u00b7 B \u00b7 (1))\n\nG3  (~~A \u00b7 B) + (A \u00b7 B~~) + (A \u00b7 B)\n\nG3  A + B\n\nG3  A + B\n\nG3    A \u00b7B\n\nG3  (A \u00b7 A) \u00b7 (B \u00b7 B)",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 163.99,
                        "w": 308.35,
                        "h": 479.79
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 5,
            "text": "2     Finite State Machines                [45 points]\n2.1    Simplifying an FSM [20 points]\n                                          one input / one output\n                                             0/1                 1/0\n                                                      1/0\n                                              A         0/1      B\n                                         1/0            0/1         1/0\n                                    Reset     C                  D\n                                                       0/1\n\n  not                   not\n\n           Current State Input Next State Output\n                 A         0       A        1\n                 A         1       B        0\n                 B         0       A        1\n                 B         1       B        0\n                 C         0       D        1\n                 C         1       A        0\n                 D         0       A        1\n                 D         1       B        0\n\n\n\n           Current State Input Next State Output\n                 X         0       X        1\n                 X         1       X        0\n                 C         0       X        1\n                 C         1       X        0\n                                                                     only\n      1/0\n      0/1\n             S",
            "md": "# Finite State Machines\n\n# Simplifying an FSM\n\n[45 points]\n\n[20 points]\n\n|   | one input / one output |     |     |   |\n| - | ---------------------- | --- | --- | - |\n|   | 0/1                    | 1/0 |     |   |\n|   | A                      | 0/1 | B   |   |\n|   | 1/0                    | C   | 0/1 | D |\n|   |                        | 0/1 |     |   |\n\n# Current State Input Next State Output\n\n| A | 0 | A | 1 |\n| - | - | - | - |\n| A | 1 | B | 0 |\n| B | 0 | A | 1 |\n| B | 1 | B | 0 |\n| C | 0 | D | 1 |\n| C | 1 | A | 0 |\n| D | 0 | A | 1 |\n| D | 1 | B | 0 |\n\n# Current State Input Next State Output\n\n| X | 0 | X | 1 |\n| - | - | - | - |\n| X | 1 | X | 0 |\n| C | 0 | X | 1 |\n| C | 1 | X | 0 |\n\nonly\n\n1/0\n\n0/1\n\nS",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Finite State Machines",
                    "md": "# Finite State Machines",
                    "rows": null,
                    "bBox": {
                        "x": 95.67,
                        "y": 67.62,
                        "w": 175.03,
                        "h": 600.82
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Simplifying an FSM",
                    "md": "# Simplifying an FSM",
                    "rows": null,
                    "bBox": {
                        "x": 122.89,
                        "y": 177.62,
                        "w": 147.8,
                        "h": 490.82
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "[45 points]\n\n[20 points]",
                    "md": "[45 points]\n\n[20 points]",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 233.48,
                        "h": 600.82
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|   | one input / one output |     |     |   |\n| - | ---------------------- | --- | --- | - |\n|   | 0/1                    | 1/0 |     |   |\n|   | A                      | 0/1 | B   |   |\n|   | 1/0                    | C   | 0/1 | D |\n|   |                        | 0/1 |     |   |",
                    "rows": [
                        [
                            "",
                            "one input / one output",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "0/1",
                            "1/0",
                            "",
                            ""
                        ],
                        [
                            "",
                            "A",
                            "0/1",
                            "B",
                            ""
                        ],
                        [
                            "",
                            "1/0",
                            "C",
                            "0/1",
                            "D"
                        ],
                        [
                            "",
                            "",
                            "0/1",
                            "",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 428.38,
                        "h": 600.82
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Current State Input Next State Output",
                    "md": "# Current State Input Next State Output",
                    "rows": null,
                    "bBox": {
                        "x": 100.54,
                        "y": 177.62,
                        "w": 174.73,
                        "h": 490.82
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| A | 0 | A | 1 |\n| - | - | - | - |\n| A | 1 | B | 0 |\n| B | 0 | A | 1 |\n| B | 1 | B | 0 |\n| C | 0 | D | 1 |\n| C | 1 | A | 0 |\n| D | 0 | A | 1 |\n| D | 1 | B | 0 |",
                    "rows": [
                        [
                            "A",
                            "0",
                            "A",
                            "1"
                        ],
                        [
                            "A",
                            "1",
                            "B",
                            "0"
                        ],
                        [
                            "B",
                            "0",
                            "A",
                            "1"
                        ],
                        [
                            "B",
                            "1",
                            "B",
                            "0"
                        ],
                        [
                            "C",
                            "0",
                            "D",
                            "1"
                        ],
                        [
                            "C",
                            "1",
                            "A",
                            "0"
                        ],
                        [
                            "D",
                            "0",
                            "A",
                            "1"
                        ],
                        [
                            "D",
                            "1",
                            "B",
                            "0"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 298.52,
                        "h": 580.26
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Current State Input Next State Output",
                    "md": "# Current State Input Next State Output",
                    "rows": null,
                    "bBox": {
                        "x": 100.54,
                        "y": 177.62,
                        "w": 174.73,
                        "h": 490.82
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| X | 0 | X | 1 |\n| - | - | - | - |\n| X | 1 | X | 0 |\n| C | 0 | X | 1 |\n| C | 1 | X | 0 |",
                    "rows": [
                        [
                            "X",
                            "0",
                            "X",
                            "1"
                        ],
                        [
                            "X",
                            "1",
                            "X",
                            "0"
                        ],
                        [
                            "C",
                            "0",
                            "X",
                            "1"
                        ],
                        [
                            "C",
                            "1",
                            "X",
                            "0"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 298.52,
                        "h": 580.26
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "only\n\n1/0\n\n0/1\n\nS",
                    "md": "only\n\n1/0\n\n0/1\n\nS",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 149.14,
                        "w": 405.82,
                        "h": 519.3
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 6,
            "text": "2.2    Designing an FSM [25 points]\n                  not\n                                              only\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                               not\n\n                   1         0               0           0\n                   SXXX1      1     SXX10           SXX00\n       reset          0               0               0\n                   1            0           0         1\n                           S0011            SX001\n                             1                 0\n                                      1",
            "md": "# 2.2 Designing an FSM [25 points]\n\n|       | 1     | 0     | 0     | 0 |\n| ----- | ----- | ----- | ----- | - |\n| SXXX1 | 1     | SXX10 | SXX00 |   |\n| reset | 0     | 0     | 0     |   |\n|       | 1     | 0     | 0     | 1 |\n|       | S0011 | SX001 |       |   |\n|       | 1     |       | 0     |   |\n|       | 1     |       |       |   |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "2.2 Designing an FSM [25 points]",
                    "md": "# 2.2 Designing an FSM [25 points]",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 70.01,
                        "w": 196.81,
                        "h": 12.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|       | 1     | 0     | 0     | 0 |\n| ----- | ----- | ----- | ----- | - |\n| SXXX1 | 1     | SXX10 | SXX00 |   |\n| reset | 0     | 0     | 0     |   |\n|       | 1     | 0     | 0     | 1 |\n|       | S0011 | SX001 |       |   |\n|       | 1     |       | 0     |   |\n|       | 1     |       |       |   |",
                    "rows": [
                        [
                            "",
                            "1",
                            "0",
                            "0",
                            "0"
                        ],
                        [
                            "SXXX1",
                            "1",
                            "SXX10",
                            "SXX00",
                            ""
                        ],
                        [
                            "reset",
                            "0",
                            "0",
                            "0",
                            ""
                        ],
                        [
                            "",
                            "1",
                            "0",
                            "0",
                            "1"
                        ],
                        [
                            "",
                            "S0011",
                            "SX001",
                            "",
                            ""
                        ],
                        [
                            "",
                            "1",
                            "",
                            "0",
                            ""
                        ],
                        [
                            "",
                            "1",
                            "",
                            "",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 70.01,
                        "w": 450.8,
                        "h": 584.05
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 7,
            "text": "3    ISA vs. Microarchitecture                  [45 points]\nNote:  we will subtract 2 points for each incorrect answer and award 0 points for each unanswered\nquestion.\n                                 1. ISA              Microarchitecture\n                                    ISA           2. Microarchitecture\n                                 1. ISA              Microarchitecture\n                                    ISA           2. Microarchitecture\n                                    ISA           2. Microarchitecture\n                                 1. ISA              Microarchitecture\n                                 1. ISA              Microarchitecture\n                                    ISA           2. Microarchitecture\n                                    ISA           2. Microarchitecture\n                                    ISA           2. Microarchitecture\n                                 1. ISA              Microarchitecture\n                                    ISA           2. Microarchitecture\n                                    ISA           2. Microarchitecture\n                                    ISA           2. Microarchitecture\n                                 1. ISA              Microarchitecture",
            "md": "# 3 ISA vs. Microarchitecture\n\nNote: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.\n\n| 1. ISA | Microarchitecture    |\n| ------ | -------------------- |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "3 ISA vs. Microarchitecture",
                    "md": "# 3 ISA vs. Microarchitecture",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 334.84,
                        "h": 621.44
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "Note: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.",
                    "md": "Note: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 111.75,
                        "w": 451.51,
                        "h": 21.96
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 1. ISA | Microarchitecture    |\n| ------ | -------------------- |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| ISA    | 2. Microarchitecture |\n| 1. ISA | Microarchitecture    |",
                    "rows": [
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ],
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "ISA",
                            "2. Microarchitecture"
                        ],
                        [
                            "1. ISA",
                            "Microarchitecture"
                        ]
                    ],
                    "bBox": {
                        "x": 95.67,
                        "y": 67.62,
                        "w": 311.17,
                        "h": 621.44
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 8,
            "text": "   4     Verilog   [60 points]\n   4.1    What Does This Code Do?          [30 points]\n 1   module  module_x  (input wire clk, input wire rst,\n 2      input wire [7:0] in,  output  wire [7:0] out);\n 3\n 4   reg  [7:0] var1, var2, var3, var4;\n 5\n 6   assign  out =  (var4 == in)  ?  var3 : var4;\n 7\n 8   always  @(posedge clk) begin\n 9      if (rst) begin\n10        var1  <= 8\u2019b0;     var2    <= 8\u2019b1;\n11        var3  <= 8\u2019b0;     var4    <= 8\u2019b0;\n12      end else begin\n13        var1  <= var2;     var2    <= var1 + var2;\n14        var3  <= var1 +  var2;\n15        var4  <= var4 +  8\u2019b1;\n16      end\n17   end\n18   endmodule\n                        in always\n   in = 8\u2019h09\n       unsigned decimal                out\n                     out               clk\n     posedge 0 posedge 1 \u2026\n       clk\n       rst\n       out         0    1    2    3    4    5    6    7    8   55\n                                           \u2026\n                  fill in all 10 empty boxes\n\n         Explanation.\n                               inth                                       in\n                               in                        out\n         0, 1, 2, 3, 4, 5, 6, 7, 8, 55",
            "md": "# Verilog [60 points]\n\n# 4.1 What Does This Code Do? [30 points]\n\nmodule module_x (input wire clk, input wire rst,\ninput wire [7:0] in, output wire [7:0] out);\n\nreg [7:0] var1, var2, var3, var4;\n\nassign out = (var4 == in) ? var3 : var4;\n\nalways @(posedge clk) begin\nif (rst) begin\nvar1 <= 8'b0;     var2 <= 8'b1;\nvar3 <= 8'b0;     var4 <= 8'b0;\nend else begin\nvar1 <= var2;     var2 <= var1 + var2;\nvar3 <= var1 + var2;\nvar4 <= var4 + 8'b1;\nend\nend\nendmodule\n\n| in        | unsigned decimal | out | clk |\n| --------- | ---------------- | --- | --- |\n| posedge 0 | 0                | 1   | 2   |\n| 3         | 4                | 5   | 6   |\n| 7         | 8                | 55  |     |\n\nExplanation.\n\ninth\nin\n0, 1, 2, 3, 4, 5, 6, 7, 8, 55",
            "images": [
                {
                    "name": "img_p7_1.png",
                    "height": 110.0,
                    "width": 928.0,
                    "x": 72.0,
                    "y": 429.7701199999999,
                    "original_width": 928,
                    "original_height": 110,
                    "type": null
                }
            ],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Verilog [60 points]",
                    "md": "# Verilog [60 points]",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 67.62,
                        "w": 245.67,
                        "h": 584.63
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "4.1 What Does This Code Do? [30 points]",
                    "md": "# 4.1 What Does This Code Do? [30 points]",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 67.62,
                        "w": 261.96,
                        "h": 584.63
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "module module_x (input wire clk, input wire rst,\ninput wire [7:0] in, output wire [7:0] out);\n\nreg [7:0] var1, var2, var3, var4;\n\nassign out = (var4 == in) ? var3 : var4;\n\nalways @(posedge clk) begin\nif (rst) begin\nvar1 <= 8'b0;     var2 <= 8'b1;\nvar3 <= 8'b0;     var4 <= 8'b0;\nend else begin\nvar1 <= var2;     var2 <= var1 + var2;\nvar3 <= var1 + var2;\nvar4 <= var4 + 8'b1;\nend\nend\nendmodule",
                    "md": "module module_x (input wire clk, input wire rst,\ninput wire [7:0] in, output wire [7:0] out);\n\nreg [7:0] var1, var2, var3, var4;\n\nassign out = (var4 == in) ? var3 : var4;\n\nalways @(posedge clk) begin\nif (rst) begin\nvar1 <= 8'b0;     var2 <= 8'b1;\nvar3 <= 8'b0;     var4 <= 8'b0;\nend else begin\nvar1 <= var2;     var2 <= var1 + var2;\nvar3 <= var1 + var2;\nvar4 <= var4 + 8'b1;\nend\nend\nendmodule",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 67.62,
                        "w": 442.22,
                        "h": 584.63
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| in        | unsigned decimal | out | clk |\n| --------- | ---------------- | --- | --- |\n| posedge 0 | 0                | 1   | 2   |\n| 3         | 4                | 5   | 6   |\n| 7         | 8                | 55  |     |",
                    "rows": [
                        [
                            "in",
                            "unsigned decimal",
                            "out",
                            "clk"
                        ],
                        [
                            "posedge 0",
                            "0",
                            "1",
                            "2"
                        ],
                        [
                            "3",
                            "4",
                            "5",
                            "6"
                        ],
                        [
                            "7",
                            "8",
                            "55",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 55.26,
                        "y": 67.62,
                        "w": 468.19,
                        "h": 608.54
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "Explanation.\n\ninth\nin\n0, 1, 2, 3, 4, 5, 6, 7, 8, 55",
                    "md": "Explanation.\n\ninth\nin\n0, 1, 2, 3, 4, 5, 6, 7, 8, 55",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 67.62,
                        "w": 322.8,
                        "h": 608.54
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 9,
            "text": "    4.2   Is ChatGPT not Right?        [30 points]\n\n\n\n\n1   module movement  (\n2     input clk,     input rst,\n3     input up,      input down,\n4     input left,    input right,\n5     1  stride,\n6     output  [7:0] x_coord,\n7     output  [7:0] y_coord\n8   );\n9    2  x_internal, y_internal;  // 8-bit signals\n10  wire [2:0] move_amount  =    3 ; // if stride is not zero, move by stride  amount, else move by 1\n11  always @(posedge clk) begin\n12    if (rst) begin\n13       x_internal <= 0; y_internal <= 0;\n14    end else begin\n15       if (up) y_internal <= y_internal   + move_amount;\n16       else if (down)  y_internal <= y_internal  -  move_amount;\n17       else if (left)  x_internal <= x_internal  -  move_amount;\n18       x_internal <= x_internal  + move_amount;\n19    end\n20  end\n21   4  x_coord  =  x_internal;  // output  coordinate\n22   4  y_coord  =  y_internal;  // output  coordinate\n23  endmodule\n                            Hint:                           ?\n\n\n\n                    stride != 3\u2019b0 ?     stride :     3\u2019b1;\n                           assign       ==                  let",
            "md": "# 4.2 Is ChatGPT not Right? [30 points]\n\n1   module movement  (\n2     input clk,     input rst,\n3     input up,      input down,\n4     input left,    input right,\n5     1  stride,\n6     output  [7:0] x_coord,\n7     output  [7:0] y_coord\n8   );\n9    2  x_internal, y_internal;  // 8-bit signals\n10  wire [2:0] move_amount  =    3 ; // if stride is not zero, move by stride  amount, else move by 1\n11  always @(posedge clk) begin\n12    if (rst) begin\n13       x_internal <= 0; y_internal <= 0;\n14    end else begin\n15       if (up) y_internal <= y_internal   + move_amount;\n16       else if (down)  y_internal <= y_internal  -  move_amount;\n17       else if (left)  x_internal <= x_internal  -  move_amount;\n18       x_internal <= x_internal  + move_amount;\n19    end\n20  end\n21   4  x_coord  =  x_internal;  // output  coordinate\n22   4  y_coord  =  y_internal;  // output  coordinate\n23  endmodule\nHint:                           ?\n\nstride != 3\u2019b0 ?     stride :     3\u2019b1;\n\nassign       ==                  let",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "4.2 Is ChatGPT not Right? [30 points]",
                    "md": "# 4.2 Is ChatGPT not Right? [30 points]",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 70.01,
                        "w": 392.64,
                        "h": 408.91
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "1   module movement  (\n2     input clk,     input rst,\n3     input up,      input down,\n4     input left,    input right,\n5     1  stride,\n6     output  [7:0] x_coord,\n7     output  [7:0] y_coord\n8   );\n9    2  x_internal, y_internal;  // 8-bit signals\n10  wire [2:0] move_amount  =    3 ; // if stride is not zero, move by stride  amount, else move by 1\n11  always @(posedge clk) begin\n12    if (rst) begin\n13       x_internal <= 0; y_internal <= 0;\n14    end else begin\n15       if (up) y_internal <= y_internal   + move_amount;\n16       else if (down)  y_internal <= y_internal  -  move_amount;\n17       else if (left)  x_internal <= x_internal  -  move_amount;\n18       x_internal <= x_internal  + move_amount;\n19    end\n20  end\n21   4  x_coord  =  x_internal;  // output  coordinate\n22   4  y_coord  =  y_internal;  // output  coordinate\n23  endmodule\nHint:                           ?\n\nstride != 3\u2019b0 ?     stride :     3\u2019b1;\n\nassign       ==                  let",
                    "md": "1   module movement  (\n2     input clk,     input rst,\n3     input up,      input down,\n4     input left,    input right,\n5     1  stride,\n6     output  [7:0] x_coord,\n7     output  [7:0] y_coord\n8   );\n9    2  x_internal, y_internal;  // 8-bit signals\n10  wire [2:0] move_amount  =    3 ; // if stride is not zero, move by stride  amount, else move by 1\n11  always @(posedge clk) begin\n12    if (rst) begin\n13       x_internal <= 0; y_internal <= 0;\n14    end else begin\n15       if (up) y_internal <= y_internal   + move_amount;\n16       else if (down)  y_internal <= y_internal  -  move_amount;\n17       else if (left)  x_internal <= x_internal  -  move_amount;\n18       x_internal <= x_internal  + move_amount;\n19    end\n20  end\n21   4  x_coord  =  x_internal;  // output  coordinate\n22   4  y_coord  =  y_internal;  // output  coordinate\n23  endmodule\nHint:                           ?\n\nstride != 3\u2019b0 ?     stride :     3\u2019b1;\n\nassign       ==                  let",
                    "rows": null,
                    "bBox": {
                        "x": 55.26,
                        "y": 156.14,
                        "w": 514.51,
                        "h": 427.8
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 10,
            "text": "Explanation.\n           stride\n                                                    input reg\nreg [7:0]\n                                                          stride != 3\u2019b0 ?          stride\n:   3\u2019b1;                                                                      stride\n                                                          3\u2019b1\n                                                                      assign x_coord =\nx_internal;\n\n\nExplanation.                                               x_internal\n         move_amount",
            "md": "# Explanation\n\n| stride          | input reg                       |\n| --------------- | ------------------------------- |\n| reg \\[7:0]      | stride != 3\u2019b0 ? stride : 3\u2019b1; |\n| stride          | 3\u2019b1                            |\n| assign x\\_coord | x\\_internal;                    |\n\n# Explanation\n\n| move\\_amount | x\\_internal |\n| ------------ | ----------- |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| stride          | input reg                       |\n| --------------- | ------------------------------- |\n| reg \\[7:0]      | stride != 3\u2019b0 ? stride : 3\u2019b1; |\n| stride          | 3\u2019b1                            |\n| assign x\\_coord | x\\_internal;                    |",
                    "rows": [
                        [
                            "stride",
                            "input reg"
                        ],
                        [
                            "reg [7:0]",
                            "stride != 3\u2019b0 ? stride : 3\u2019b1;"
                        ],
                        [
                            "stride",
                            "3\u2019b1"
                        ],
                        [
                            "assign x_coord",
                            "x_internal;"
                        ]
                    ],
                    "bBox": {
                        "x": 94.56,
                        "y": 146.17,
                        "w": 406.31,
                        "h": 109.19
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| move\\_amount | x\\_internal |\n| ------------ | ----------- |",
                    "rows": [
                        [
                            "move_amount",
                            "x_internal"
                        ]
                    ],
                    "bBox": {
                        "x": 94.56,
                        "y": 245.36,
                        "w": 405.77,
                        "h": 150.39
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 11,
            "text": "5     Memory Potpourri               [45 points]\n                               Note: we will subtract 2 points for each incorrect answer and award 0\npoints for each unanswered question.\n       1. True              False\n        True             2. False\n        True             2. False\n        True             2. False\n       1. True              False\n        True             2. False\n        True             2. False\n       1. True              False\n                                            not\n        True             2. False\n        True             2. False\n        True             2. False\n        True             2. False\n       1. True              False\n        True             2. False\n       1. True              False",
            "md": "# Memory Potpourri\n\n[45 points]\n\nNote: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.\n\n| 1.   | True | False |\n| ---- | ---- | ----- |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| 1.   | True | False |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Memory Potpourri",
                    "md": "# Memory Potpourri",
                    "rows": null,
                    "bBox": {
                        "x": 95.67,
                        "y": 67.62,
                        "w": 130.15,
                        "h": 14.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "[45 points]\n\nNote: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.",
                    "md": "[45 points]\n\nNote: we will subtract 2 points for each incorrect answer and award 0 points for each unanswered question.",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.18,
                        "h": 338.83
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 1.   | True | False |\n| ---- | ---- | ----- |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| True | 2.   | False |\n| 1.   | True | False |\n| True | 2.   | False |\n| 1.   | True | False |",
                    "rows": [
                        [
                            "1.",
                            "True",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "1.",
                            "True",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "1.",
                            "True",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "1.",
                            "True",
                            "False"
                        ],
                        [
                            "True",
                            "2.",
                            "False"
                        ],
                        [
                            "1.",
                            "True",
                            "False"
                        ]
                    ],
                    "bBox": {
                        "x": 96.91,
                        "y": 147.62,
                        "w": 125.98,
                        "h": 516.19
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 12,
            "text": "6    Performance Evaluation               [50 points]\n                       P 1         load instructions   6 cycles store instructions   6 cycles arith-\nmetic instructions   2 cycles     branch instructions   2 cycles                         A\n                                                                       A\n     P 1\n          CP I = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n          CP I = 4.4\n                                                                            P 1\n     all                                                              P 2\n                     P 2                   P 1\n                A                                  A                            P 2\n          CP I = 0.4 \u00d7 10 + 0.2 \u00d7 10 + 0.3 \u00d7 6 + 0.1 \u00d7 6\n          CP I = 8.4\n                                            P 1   P 2\n          P 2        \u00d7            P 1\n          Explanation.\n          Execution T ime P 1 = instructions \u00d7 CP IP 1 \u00d7 clock time\n          Execution T ime P 2 = instructions \u00d7 CP IP 2 \u00d7 clock_time\n          clock time = clock_f 1                              2\n                              requency\n                             Execution T ime P 2      <     Execution T ime P 1           =\n                                                                                           \u21d2\n           Execution_T ime_P 1 > 1\n           Execution_T ime_P 2\n          =    instructions\u00d7CP I  \u00d7clock_time\n            \u21d2  instructions\u00d7CP IP 1 \u00d7 clock_time\n          =    4.4\u00d7clock_time  P 2   2\n            \u21d2  8.4\u00d7 clock_time\n          =    4.4    2\n            \u21d2  4.2\n          =\n            \u21d2 1.05",
            "md": "# 6 Performance Evaluation\n\n| load instructions       | 6 cycles |\n| ----------------------- | -------- |\n| store instructions      | 6 cycles |\n| arithmetic instructions | 2 cycles |\n| branch instructions     | 2 cycles |\n\nP 1\n\nCP I = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP I = 4.4\n\nP 1\n\nall\n\nP 2\n\nP 2\n\nP 1\n\nA\n\nA\n\nP 2\n\nCP I = 0.4 \u00d7 10 + 0.2 \u00d7 10 + 0.3 \u00d7 6 + 0.1 \u00d7 6\n\nCP I = 8.4\n\nP 1 P 2\n\nP 2 \u00d7 P 1\n\n# Explanation.\n\nExecution Time P 1 = instructions \u00d7 CP I P 1 \u00d7 clock time\n\nExecution Time P 2 = instructions \u00d7 CP I P 2 \u00d7 clock time\n\nclock time = clock frequency\n\nExecution Time P 2 &lt; Execution Time P 1\n\nExecution Time P 1 &gt; 1\n\nExecution Time P 2 = instructions \u00d7 CP I \u00d7 clock time\n\ninstructions \u00d7 CP I P 1 \u00d7 clock time\n\n4.4 \u00d7 clock time P 2\n\n8.4 \u00d7 clock time\n\n4.4\n\n4.2\n\n1.05",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "6 Performance Evaluation",
                    "md": "# 6 Performance Evaluation",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.0,
                        "h": 262.12
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| load instructions       | 6 cycles |\n| ----------------------- | -------- |\n| store instructions      | 6 cycles |\n| arithmetic instructions | 2 cycles |\n| branch instructions     | 2 cycles |",
                    "rows": [
                        [
                            "load instructions",
                            "6 cycles"
                        ],
                        [
                            "store instructions",
                            "6 cycles"
                        ],
                        [
                            "arithmetic instructions",
                            "2 cycles"
                        ],
                        [
                            "branch instructions",
                            "2 cycles"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 93.82,
                        "w": 450.97,
                        "h": 21.96
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "P 1\n\nCP I = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP I = 4.4\n\nP 1\n\nall\n\nP 2\n\nP 2\n\nP 1\n\nA\n\nA\n\nP 2\n\nCP I = 0.4 \u00d7 10 + 0.2 \u00d7 10 + 0.3 \u00d7 6 + 0.1 \u00d7 6\n\nCP I = 8.4\n\nP 1 P 2\n\nP 2 \u00d7 P 1",
                    "md": "P 1\n\nCP I = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP I = 4.4\n\nP 1\n\nall\n\nP 2\n\nP 2\n\nP 1\n\nA\n\nA\n\nP 2\n\nCP I = 0.4 \u00d7 10 + 0.2 \u00d7 10 + 0.3 \u00d7 6 + 0.1 \u00d7 6\n\nCP I = 8.4\n\nP 1 P 2\n\nP 2 \u00d7 P 1",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.31,
                        "h": 626.85
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation.",
                    "md": "# Explanation.",
                    "rows": null,
                    "bBox": {
                        "x": 79.2,
                        "y": 147.62,
                        "w": 443.8,
                        "h": 407.86
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "Execution Time P 1 = instructions \u00d7 CP I P 1 \u00d7 clock time\n\nExecution Time P 2 = instructions \u00d7 CP I P 2 \u00d7 clock time\n\nclock time = clock frequency\n\nExecution Time P 2 &lt; Execution Time P 1\n\nExecution Time P 1 &gt; 1\n\nExecution Time P 2 = instructions \u00d7 CP I \u00d7 clock time\n\ninstructions \u00d7 CP I P 1 \u00d7 clock time\n\n4.4 \u00d7 clock time P 2\n\n8.4 \u00d7 clock time\n\n4.4\n\n4.2\n\n1.05",
                    "md": "Execution Time P 1 = instructions \u00d7 CP I P 1 \u00d7 clock time\n\nExecution Time P 2 = instructions \u00d7 CP I P 2 \u00d7 clock time\n\nclock time = clock frequency\n\nExecution Time P 2 &lt; Execution Time P 1\n\nExecution Time P 1 &gt; 1\n\nExecution Time P 2 = instructions \u00d7 CP I \u00d7 clock time\n\ninstructions \u00d7 CP I P 1 \u00d7 clock time\n\n4.4 \u00d7 clock time P 2\n\n8.4 \u00d7 clock time\n\n4.4\n\n4.2\n\n1.05",
                    "rows": null,
                    "bBox": {
                        "x": 78.65,
                        "y": 159.57,
                        "w": 444.61,
                        "h": 534.89
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 13,
            "text": "                                        P 1                                         without\n                                        only one\nALU              ALU       halves\nLSU    asymmetric load-store unit       halves                                   doubles\n                            P 1                A\n\n Explanation.\n            A\n\n SpeedupALU = (1\u22120.3\u22120.1   0.3+0.1 = 1.25\n                        1)+  2\n SpeedupLSU = (1\u22120.4\u22120.  1 0.4      = 1.0\n                        2)+ 2 +0.2\u00d72\n                                   \u00d7\n Alternative Solution.\n                                       P 1\n CP IALU = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n CP IALU = 4.0                       ~~2</s>  <s>2~~  \n                                       P 1\n CP ILSU = 0.4 \u00d7 6 + 0.2 \u00d7 (6 \u00d7 2) + 0.3 \u00d7 2 + 0.1 \u00d7 2\n CP ILSU = 4.4    ~~2~~  \n       CP IALU   <  CP ILSU",
            "md": "# Current Page\n\nwithout only one\n\n| ALU | ALU | halves | LSU | asymmetric load-store unit | halves | doubles |\n| --- | --- | ------ | --- | -------------------------- | ------ | ------- |\n\n# Explanation\n\nA\n\nSpeedupALU = (1\u22120.3\u22120.1)/(1+0.3+0.1) = 1.25\n\nSpeedupLSU = (1\u22120.4\u22120.1)/(2)+2+0.2\u00d72 = 1.0\n\n# Alternative Solution\n\nP 1\n\nCP IALU = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP IALU = 4.0\n\n~~2 2~~\n\nP 1\n\nCP ILSU = 0.4 \u00d7 6 + 0.2 \u00d7 (6 \u00d7 2) + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP ILSU = 4.4\n\nCP IALU < CP ILSU",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Current Page",
                    "md": "# Current Page",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 324.39,
                        "w": 383.45,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "without only one",
                    "md": "without only one",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 83.96,
                        "w": 352.96,
                        "h": 10.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| ALU | ALU | halves | LSU | asymmetric load-store unit | halves | doubles |\n| --- | --- | ------ | --- | -------------------------- | ------ | ------- |",
                    "rows": [
                        [
                            "ALU",
                            "ALU",
                            "halves",
                            "LSU",
                            "asymmetric load-store unit",
                            "halves",
                            "doubles"
                        ]
                    ],
                    "bBox": {
                        "x": 101.12,
                        "y": 101.89,
                        "w": 421.85,
                        "h": 452.06
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 324.39,
                        "w": 383.45,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "A\n\nSpeedupALU = (1\u22120.3\u22120.1)/(1+0.3+0.1) = 1.25\n\nSpeedupLSU = (1\u22120.4\u22120.1)/(2)+2+0.2\u00d72 = 1.0",
                    "md": "A\n\nSpeedupALU = (1\u22120.3\u22120.1)/(1+0.3+0.1) = 1.25\n\nSpeedupLSU = (1\u22120.4\u22120.1)/(2)+2+0.2\u00d72 = 1.0",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 324.39,
                        "w": 383.45,
                        "h": 98.05
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Alternative Solution",
                    "md": "# Alternative Solution",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 324.39,
                        "w": 383.45,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "P 1\n\nCP IALU = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP IALU = 4.0\n\n~~2 2~~\n\nP 1\n\nCP ILSU = 0.4 \u00d7 6 + 0.2 \u00d7 (6 \u00d7 2) + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP ILSU = 4.4\n\nCP IALU < CP ILSU",
                    "md": "P 1\n\nCP IALU = 0.4 \u00d7 6 + 0.2 \u00d7 6 + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP IALU = 4.0\n\n~~2 2~~\n\nP 1\n\nCP ILSU = 0.4 \u00d7 6 + 0.2 \u00d7 (6 \u00d7 2) + 0.3 \u00d7 2 + 0.1 \u00d7 2\n\nCP ILSU = 4.4\n\nCP IALU < CP ILSU",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 324.39,
                        "w": 383.45,
                        "h": 229.56
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 14,
            "text": "    7    Pipelining     [70 points]\n\n 1      MOVI R1,   X          #  R1 <-  X\n 2      MOVI R2,   Y          #  R2 <-  Y\n 3  L1:\n 4      MUL   R4,  R1,  R1    #  R4 <- R1 \u00d7    R1\n 5      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n 6      ADD   R4,  R5,  R6    #  R4 <- R5  +  R6\n 7      ADD   R5,  R2,  R4    #  R5 <- R2  +  R4\n 8      SUBI R3,   R1,  2048  #  R3 <- R1  -  2048, set condition  flags\n 9      JNZ   L1              #  Jump to L1 if zero flag is NOT    set\n10      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n                                                           Cycles\n         Instructions     1    2   3     4     5   6   7   8   9    10  11  12  13  14  15   16\n     1   MOVI R1, X       F    D   E1    E2    E3  M   W\n     2   MOVI R2, Y            F   D     E1    E2  E3  M   W\n     3   MUL R4, R1, R1            F     D     -   E1  E2  E3  M    W\n     4   MUL R1, R1, R2                  F     -   D   E1  E2  E3   M   W\n     5   ADD R4, R5, R6                            F   D   E1  E2   E3  M   W\n     6   ADD R5, R2, R4                                F   D   -    -   E1  E2  E3  M   W\n     7   SUBI R3, R1, 2048                                 F   -    -   D   E1  E2  E3  M    W\n     8   JNZ L1                                                         F   D   -   -   E1   ...\n     9   ...              ...",
            "md": "# Pipelining\n\n# [70 points]\n\n1      MOVI R1,   X          #  R1 <-  X\n2      MOVI R2,   Y          #  R2 <-  Y\n3  L1:\n4      MUL   R4,  R1,  R1    #  R4 <- R1 \u00d7    R1\n5      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n6      ADD   R4,  R5,  R6    #  R4 <- R5  +  R6\n7      ADD   R5,  R2,  R4    #  R5 <- R2  +  R4\n8      SUBI R3,   R1,  2048  #  R3 <- R1  -  2048, set condition  flags\n9      JNZ   L1              #  Jump to L1 if zero flag is NOT    set\n10      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n\n| Instructions | Cycles            | 1 | 2 | 3  | 4  | 5  | 6  | 7  | 8  | 9  | 10 | 11 | 12  | 13 | 14 | 15 | 16 |\n| ------------ | ----------------- | - | - | -- | -- | -- | -- | -- | -- | -- | -- | -- | --- | -- | -- | -- | -- |\n| 1            | MOVI R1, X        | F | D | E1 | E2 | E3 | M  | W  |    |    |    |    |     |    |    |    |    |\n| 2            | MOVI R2, Y        |   | F | D  | E1 | E2 | E3 | M  | W  |    |    |    |     |    |    |    |    |\n| 3            | MUL R4, R1, R1    |   |   | F  | D  | -  | E1 | E2 | E3 | M  | W  |    |     |    |    |    |    |\n| 4            | MUL R1, R1, R2    |   |   |    | F  | -  | D  | E1 | E2 | E3 | M  | W  |     |    |    |    |    |\n| 5            | ADD R4, R5, R6    |   |   |    |    | F  | D  | E1 | E2 | E3 | M  | W  |     |    |    |    |    |\n| 6            | ADD R5, R2, R4    |   |   |    |    |    | F  | D  | -  | -  | E1 | E2 | E3  | M  | W  |    |    |\n| 7            | SUBI R3, R1, 2048 |   |   |    |    |    | F  | -  | -  | D  | E1 | E2 | E3  | M  | W  |    |    |\n| 8            | JNZ L1            |   |   |    |    |    |    | F  | D  | -  | -  | E1 | ... |    |    |    |    |\n| 9            | ...               |   |   |    |    |    |    |    |    |    |    |    |     |    |    |    |    |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Pipelining",
                    "md": "# Pipelining",
                    "rows": null,
                    "bBox": {
                        "x": 95.67,
                        "y": 67.62,
                        "w": 70.0,
                        "h": 14.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "[70 points]",
                    "md": "# [70 points]",
                    "rows": null,
                    "bBox": {
                        "x": 58.65,
                        "y": 67.62,
                        "w": 259.34,
                        "h": 279.56
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "1      MOVI R1,   X          #  R1 <-  X\n2      MOVI R2,   Y          #  R2 <-  Y\n3  L1:\n4      MUL   R4,  R1,  R1    #  R4 <- R1 \u00d7    R1\n5      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n6      ADD   R4,  R5,  R6    #  R4 <- R5  +  R6\n7      ADD   R5,  R2,  R4    #  R5 <- R2  +  R4\n8      SUBI R3,   R1,  2048  #  R3 <- R1  -  2048, set condition  flags\n9      JNZ   L1              #  Jump to L1 if zero flag is NOT    set\n10      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2",
                    "md": "1      MOVI R1,   X          #  R1 <-  X\n2      MOVI R2,   Y          #  R2 <-  Y\n3  L1:\n4      MUL   R4,  R1,  R1    #  R4 <- R1 \u00d7    R1\n5      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2\n6      ADD   R4,  R5,  R6    #  R4 <- R5  +  R6\n7      ADD   R5,  R2,  R4    #  R5 <- R2  +  R4\n8      SUBI R3,   R1,  2048  #  R3 <- R1  -  2048, set condition  flags\n9      JNZ   L1              #  Jump to L1 if zero flag is NOT    set\n10      MUL   R1,  R1,  R2    #  R1 <- R1 \u00d7    R2",
                    "rows": null,
                    "bBox": {
                        "x": 55.26,
                        "y": 67.62,
                        "w": 448.37,
                        "h": 302.27
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Instructions | Cycles            | 1 | 2 | 3  | 4  | 5  | 6  | 7  | 8  | 9  | 10 | 11 | 12  | 13 | 14 | 15 | 16 |\n| ------------ | ----------------- | - | - | -- | -- | -- | -- | -- | -- | -- | -- | -- | --- | -- | -- | -- | -- |\n| 1            | MOVI R1, X        | F | D | E1 | E2 | E3 | M  | W  |    |    |    |    |     |    |    |    |    |\n| 2            | MOVI R2, Y        |   | F | D  | E1 | E2 | E3 | M  | W  |    |    |    |     |    |    |    |    |\n| 3            | MUL R4, R1, R1    |   |   | F  | D  | -  | E1 | E2 | E3 | M  | W  |    |     |    |    |    |    |\n| 4            | MUL R1, R1, R2    |   |   |    | F  | -  | D  | E1 | E2 | E3 | M  | W  |     |    |    |    |    |\n| 5            | ADD R4, R5, R6    |   |   |    |    | F  | D  | E1 | E2 | E3 | M  | W  |     |    |    |    |    |\n| 6            | ADD R5, R2, R4    |   |   |    |    |    | F  | D  | -  | -  | E1 | E2 | E3  | M  | W  |    |    |\n| 7            | SUBI R3, R1, 2048 |   |   |    |    |    | F  | -  | -  | D  | E1 | E2 | E3  | M  | W  |    |    |\n| 8            | JNZ L1            |   |   |    |    |    |    | F  | D  | -  | -  | E1 | ... |    |    |    |    |\n| 9            | ...               |   |   |    |    |    |    |    |    |    |    |    |     |    |    |    |    |",
                    "rows": [
                        [
                            "Instructions",
                            "Cycles",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            "10",
                            "11",
                            "12",
                            "13",
                            "14",
                            "15",
                            "16"
                        ],
                        [
                            "1",
                            "MOVI R1, X",
                            "F",
                            "D",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "2",
                            "MOVI R2, Y",
                            "",
                            "F",
                            "D",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "3",
                            "MUL R4, R1, R1",
                            "",
                            "",
                            "F",
                            "D",
                            "-",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "4",
                            "MUL R1, R1, R2",
                            "",
                            "",
                            "",
                            "F",
                            "-",
                            "D",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "5",
                            "ADD R4, R5, R6",
                            "",
                            "",
                            "",
                            "",
                            "F",
                            "D",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "6",
                            "ADD R5, R2, R4",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "F",
                            "D",
                            "-",
                            "-",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            ""
                        ],
                        [
                            "7",
                            "SUBI R3, R1, 2048",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "F",
                            "-",
                            "-",
                            "D",
                            "E1",
                            "E2",
                            "E3",
                            "M",
                            "W",
                            "",
                            ""
                        ],
                        [
                            "8",
                            "JNZ L1",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "F",
                            "D",
                            "-",
                            "-",
                            "E1",
                            "...",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "9",
                            "...",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 55.26,
                        "y": 67.62,
                        "w": 472.21,
                        "h": 302.27
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 15,
            "text": "\u2022\n\u2022\n\u2022\n                     T\n\u2022\n\u2022                                               N         MUL R4, R1, R1\n                                  T\n\n    Explanation.\n                   MUL R4, R1, R1\n\n                   JNZ L1                                      MUL R4, R1, R1\n\n\n\n                  T                                     MUL R4, R1, R1\n         T = 12 + 7 \u00d7 10 = 82",
            "md": "T\n\nMUL R4, R1, R1\n\n# Explanation\n\nMUL R4, R1, R1\n\nJNZ L1\n\nMUL R4, R1, R1\n\nT = 12 + 7 \u00d7 10 = 82",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "T\n\nMUL R4, R1, R1",
                    "md": "T\n\nMUL R4, R1, R1",
                    "rows": null,
                    "bBox": {
                        "x": 79.75,
                        "y": 336.7,
                        "w": 422.49,
                        "h": 263.16
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 79.75,
                        "y": 336.7,
                        "w": 170.4,
                        "h": 263.16
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "MUL R4, R1, R1\n\nJNZ L1\n\nMUL R4, R1, R1\n\nT = 12 + 7 \u00d7 10 = 82",
                    "md": "MUL R4, R1, R1\n\nJNZ L1\n\nMUL R4, R1, R1\n\nT = 12 + 7 \u00d7 10 = 82",
                    "rows": null,
                    "bBox": {
                        "x": 79.75,
                        "y": 336.7,
                        "w": 422.49,
                        "h": 299.03
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 16,
            "text": "                             N\nT\n\nExplanation.\n                                                                     T\n\n     N = 2 + 8 \u00d7 6 + 1 = 51\n\n\n\n\nExplanation.\n\n\n\n\n\n\n     T = 19 + 8 \u00d7 10 + 1 = 100",
            "md": "N = 2 + 8 \u00d7 6 + 1 = 51\n\nT = 19 + 8 \u00d7 10 + 1 = 100",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "N = 2 + 8 \u00d7 6 + 1 = 51\n\nT = 19 + 8 \u00d7 10 + 1 = 100",
                    "md": "N = 2 + 8 \u00d7 6 + 1 = 51\n\nT = 19 + 8 \u00d7 10 + 1 = 100",
                    "rows": null,
                    "bBox": {
                        "x": 78.65,
                        "y": 72.0,
                        "w": 444.78,
                        "h": 495.02
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 17,
            "text": "8     Vector Processing            [80 points]\n\n\n             Vst                                                     Vst \u2190    Vst\n             Vln                                                     Vln \u2190    Vln\n                Vi                                               VM SK \u2190 LSB(Vi)  VM SK\n              Vi                                                               Vi \u2190 M em[Address]\n              Vi                                                               M em[Address] \u2190 Vi\n            Vi Vj  Vk                                                             Vi \u2190 Vj \u2217 Vk\n            Vi Vj  Vk                                                             Vi \u2190 Vj + Vk\n              Vi Vj                                                               Vi \u2190 Vj >> 1\n                Vi                                                           Vi \u2190 BitwiseN OT (Vi)\n              Vi, Vj                                                   Vj      Vi \u2190             Vi \u2190\n                                    V0 V1 V2 V3 V4 V5 V6 V7\n    Vst    Vln\n                 does not\n                                                                                        Vi\n                               VM SK\n                                  N\n\n\n\n                                          A             B                     A + 4\n      (B + 1)%N                                     N\n\n\n\n\n                                                                              dierent vectors\n                            VM SK",
            "md": "# 8 Vector Processing\n\n[80 points]\n\n|                   | Vst      | Vst \u2190 Vst               |       |              |   |\n| ----------------- | -------- | ----------------------- | ----- | ------------ | - |\n|                   | Vln      | Vln \u2190 Vln               |       |              |   |\n|                   | Vi       | VM SK \u2190 LSB(Vi) VM SK   |       |              |   |\n|                   | Vi       | Vi \u2190 Mem\\[Address]      |       |              |   |\n|                   | Vi       | Mem\\[Address] \u2190 Vi      |       |              |   |\n| Vi Vj Vk          |          |                         |       | Vi \u2190 Vj \u2217 Vk |   |\n| Vi Vj Vk          |          |                         |       | Vi \u2190 Vj + Vk |   |\n|                   | Vi Vj    |                         |       | Vi \u2190 Vj >> 1 |   |\n|                   | Vi       | Vi \u2190 Bitwise NOT (Vi)   |       |              |   |\n|                   | Vi, Vj   | Vj Vi \u2190 Vi \u2190            |       |              |   |\n|                   |          | V0 V1 V2 V3 V4 V5 V6 V7 |       |              |   |\n| Vst               | Vln      |                         |       |              |   |\n|                   | does not |                         |       |              |   |\n|                   | Vi       |                         |       |              |   |\n|                   |          |                         | VM SK | N            |   |\n|                   |          | A                       | B     | A + 4        |   |\n| (B + 1)%N         |          | N                       |       |              |   |\n| different vectors |          |                         |       |              |   |\n|                   |          |                         | VM SK |              |   |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "8 Vector Processing",
                    "md": "# 8 Vector Processing",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 422.16,
                        "h": 324.81
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "[80 points]",
                    "md": "[80 points]",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 422.16,
                        "h": 324.81
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|                   | Vst      | Vst \u2190 Vst               |       |              |   |\n| ----------------- | -------- | ----------------------- | ----- | ------------ | - |\n|                   | Vln      | Vln \u2190 Vln               |       |              |   |\n|                   | Vi       | VM SK \u2190 LSB(Vi) VM SK   |       |              |   |\n|                   | Vi       | Vi \u2190 Mem\\[Address]      |       |              |   |\n|                   | Vi       | Mem\\[Address] \u2190 Vi      |       |              |   |\n| Vi Vj Vk          |          |                         |       | Vi \u2190 Vj \u2217 Vk |   |\n| Vi Vj Vk          |          |                         |       | Vi \u2190 Vj + Vk |   |\n|                   | Vi Vj    |                         |       | Vi \u2190 Vj >> 1 |   |\n|                   | Vi       | Vi \u2190 Bitwise NOT (Vi)   |       |              |   |\n|                   | Vi, Vj   | Vj Vi \u2190 Vi \u2190            |       |              |   |\n|                   |          | V0 V1 V2 V3 V4 V5 V6 V7 |       |              |   |\n| Vst               | Vln      |                         |       |              |   |\n|                   | does not |                         |       |              |   |\n|                   | Vi       |                         |       |              |   |\n|                   |          |                         | VM SK | N            |   |\n|                   |          | A                       | B     | A + 4        |   |\n| (B + 1)%N         |          | N                       |       |              |   |\n| different vectors |          |                         |       |              |   |\n|                   |          |                         | VM SK |              |   |",
                    "rows": [
                        [
                            "",
                            "Vst",
                            "Vst \u2190 Vst",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vln",
                            "Vln \u2190 Vln",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vi",
                            "VM SK \u2190 LSB(Vi) VM SK",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vi",
                            "Vi \u2190 Mem[Address]",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vi",
                            "Mem[Address] \u2190 Vi",
                            "",
                            "",
                            ""
                        ],
                        [
                            "Vi Vj Vk",
                            "",
                            "",
                            "",
                            "Vi \u2190 Vj \u2217 Vk",
                            ""
                        ],
                        [
                            "Vi Vj Vk",
                            "",
                            "",
                            "",
                            "Vi \u2190 Vj + Vk",
                            ""
                        ],
                        [
                            "",
                            "Vi Vj",
                            "",
                            "",
                            "Vi \u2190 Vj >> 1",
                            ""
                        ],
                        [
                            "",
                            "Vi",
                            "Vi \u2190 Bitwise NOT (Vi)",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vi, Vj",
                            "Vj Vi \u2190 Vi \u2190",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "",
                            "V0 V1 V2 V3 V4 V5 V6 V7",
                            "",
                            "",
                            ""
                        ],
                        [
                            "Vst",
                            "Vln",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "does not",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "Vi",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "",
                            "",
                            "VM SK",
                            "N",
                            ""
                        ],
                        [
                            "",
                            "",
                            "A",
                            "B",
                            "A + 4",
                            ""
                        ],
                        [
                            "(B + 1)%N",
                            "",
                            "N",
                            "",
                            "",
                            ""
                        ],
                        [
                            "different vectors",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "",
                            "",
                            "VM SK",
                            "",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 502.33,
                        "h": 575.87
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 18,
            "text": "                                                N\n\n\nExplanation.",
            "md": "                                                N\n\n\nExplanation.",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "N\n\n\nExplanation.",
                    "md": "N\n\n\nExplanation.",
                    "rows": null,
                    "bBox": {
                        "x": 79.2,
                        "y": 72.0,
                        "w": 444.1,
                        "h": 242.44
                    }
                }
            ],
            "status": "WARNING",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": true,
            "noTextContent": false
        },
        {
            "page": 19,
            "text": "   for i= 0 to 45:\n       if(a[i] == 0):\n           c[i] = b[i]\n       else:\n           c[i] = a[i] * b[i] + a[i]/2\n\n\u2022\n\u2022\n\u2022\n\u2022\n    SET Vst, 1       # Load Vector Stride Register\n    SET Vln, 46      # Load Vector Length Register\n    VLD V1, a        # Read from array a\n    VLD V2, b        # Read from array b\n    VCMPZ V3, V1     # Compare V1 to 0\n    LDM V3           # Load Vector Mask Register\n    VST c, V2        # Write to array c\n    VNOT V3          # BitwiseNOT\n    LDM V3           # Load Vector Mask Register\n    VSHFR V4, V1     # Shift to divide\n    VMUL V5, V1, V2  # Multiply\n    VADD V6, V5, V4  # Add\n    VST c, V6        # Write to array c",
            "md": "for i= 0 to 45:\nif(a[i] == 0):\nc[i] = b[i]\nelse:\nc[i] = a[i] * b[i] + a[i]/2\n\nSET Vst, 1       # Load Vector Stride Register\nSET Vln, 46      # Load Vector Length Register\nVLD V1, a        # Read from array a\nVLD V2, b        # Read from array b\nVCMPZ V3, V1     # Compare V1 to 0\nLDM V3           # Load Vector Mask Register\nVST c, V2        # Write to array c\nVNOT V3          # BitwiseNOT\nLDM V3           # Load Vector Mask Register\nVSHFR V4, V1     # Shift to divide\nVMUL V5, V1, V2  # Multiply\nVADD V6, V5, V4  # Add\nVST c, V6        # Write to array c",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "for i= 0 to 45:\nif(a[i] == 0):\nc[i] = b[i]\nelse:\nc[i] = a[i] * b[i] + a[i]/2\n\nSET Vst, 1       # Load Vector Stride Register\nSET Vln, 46      # Load Vector Length Register\nVLD V1, a        # Read from array a\nVLD V2, b        # Read from array b\nVCMPZ V3, V1     # Compare V1 to 0\nLDM V3           # Load Vector Mask Register\nVST c, V2        # Write to array c\nVNOT V3          # BitwiseNOT\nLDM V3           # Load Vector Mask Register\nVSHFR V4, V1     # Shift to divide\nVMUL V5, V1, V2  # Multiply\nVADD V6, V5, V4  # Add\nVST c, V6        # Write to array c",
                    "md": "for i= 0 to 45:\nif(a[i] == 0):\nc[i] = b[i]\nelse:\nc[i] = a[i] * b[i] + a[i]/2\n\nSET Vst, 1       # Load Vector Stride Register\nSET Vln, 46      # Load Vector Length Register\nVLD V1, a        # Read from array a\nVLD V2, b        # Read from array b\nVCMPZ V3, V1     # Compare V1 to 0\nLDM V3           # Load Vector Mask Register\nVST c, V2        # Write to array c\nVNOT V3          # BitwiseNOT\nLDM V3           # Load Vector Mask Register\nVSHFR V4, V1     # Shift to divide\nVMUL V5, V1, V2  # Multiply\nVADD V6, V5, V4  # Add\nVST c, V6        # Write to array c",
                    "rows": null,
                    "bBox": {
                        "x": 120.82,
                        "y": 101.89,
                        "w": 273.51,
                        "h": 381.39
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 20,
            "text": "\u2022\n\u2022\n\u2022\n    Explanation.\n    bank0 --MISS-|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank1    --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank2     --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank3       --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank4        --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank5         --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|--HIT--|\n    bank6           --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|\n    bank7            --MISS--|--HIT--|--MISS--|--HIT--|--MISS--|\n\n\n\n\n\n     SET: |-S-|\n     SET:    |-S-|\n     VLD:        |-----VLD-----|\n     VLD:                           |-----VLD-----|\n     VCMPZ:                          |VCMPZ|\n     LDM:                                  |L|\n     VST:                                              |-----VST-----|\n     VNOT:                                              |VNOT|\n     LDM:                                                   |L|\n     VSHFR:                                                   |VSHFR|\n     VMUL:                                                     |VMUL|\n     VADD:                                                          |VADD|\n     VST:                                                                 |-----VST-----|\n\n\n\n\n\n\n\n\n\n    total cycles = S + S + V LD cycles + V LD cycles + V ST cycles + V ST cycles =\n    1822 cycles",
            "md": "# Explanation\n\n|       | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| ----- | -------- | ------- | -------- | ------- | -------- | ------- |\n| bank0 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank1 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank2 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank3 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank4 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank5 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank6 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- |         |\n| bank7 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n\n# SET\n\n|-S-|\n\n# SET\n\n|-S-|\n\n# VLD\n\n|-----VLD-----|\n\n# VLD\n\n|-----VLD-----|\n\n# VCMPZ\n\n|VCMPZ|\n\n# LDM\n\n|L|\n\n# VST\n\n|-----VST-----|\n\n# VNOT\n\n|VNOT|\n\n# LDM\n\n|L|\n\n# VSHFR\n\n|VSHFR|\n\n# VMUL\n\n|VMUL|\n\n# VADD\n\n|VADD|\n\n# VST\n\n|-----VST-----|\n\n# Total Cycles\n\ntotal cycles = S + S + V LD cycles + V LD cycles + V ST cycles + V ST cycles = 1822 cycles",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|       | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| ----- | -------- | ------- | -------- | ------- | -------- | ------- |\n| bank0 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank1 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank2 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank3 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank4 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank5 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |\n| bank6 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- |         |\n| bank7 | --MISS-- | --HIT-- | --MISS-- | --HIT-- | --MISS-- | --HIT-- |",
                    "rows": [
                        [
                            "",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank0",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank1",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank2",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank3",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank4",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank5",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ],
                        [
                            "bank6",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            ""
                        ],
                        [
                            "bank7",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--",
                            "--MISS--",
                            "--HIT--"
                        ]
                    ],
                    "bBox": {
                        "x": 101.89,
                        "y": 104.88,
                        "w": 400.32,
                        "h": 572.97
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "SET",
                    "md": "# SET",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-S-|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "SET",
                    "md": "# SET",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-S-|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VLD",
                    "md": "# VLD",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-----VLD-----|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VLD",
                    "md": "# VLD",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-----VLD-----|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VCMPZ",
                    "md": "# VCMPZ",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|VCMPZ|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "LDM",
                    "md": "# LDM",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|L|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VST",
                    "md": "# VST",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-----VST-----|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VNOT",
                    "md": "# VNOT",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|VNOT|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "LDM",
                    "md": "# LDM",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|L|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VSHFR",
                    "md": "# VSHFR",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|VSHFR|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VMUL",
                    "md": "# VMUL",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|VMUL|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VADD",
                    "md": "# VADD",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|VADD|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VST",
                    "md": "# VST",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "\\|-----VST-----|",
                    "rows": [],
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Total Cycles",
                    "md": "# Total Cycles",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "total cycles = S + S + V LD cycles + V LD cycles + V ST cycles + V ST cycles = 1822 cycles",
                    "md": "total cycles = S + S + V LD cycles + V LD cycles + V ST cycles + V ST cycles = 1822 cycles",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 655.9,
                        "w": 383.98,
                        "h": 21.96
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 21,
            "text": "   9       VLIW       [60 points]\n\n\n                             only\n            load_inc store_inc                                                                 rsrc2\n            1 after\n                                                                     load load_inc store     store_inc\n                                           r0 r1      r31\n\n\n     Functional             Operation (in assembly notation)                                   Semantics\n     Unit Type\n                            load rdst, [rsrc\u2081, rsrc\u2082, #offset]                                  dst         src\u2081    src\u2082\n     load                   load_inc    rdst, [rsrc\u2081, rsrc\u2082, #offset]                           dst         src\u2081    src\u2082\n                                                                                                src\u2082     src\u2082\n                            store   [rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083                                  src\u2081    src\u2082               src\u2083\n     store                  store_inc    [rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083                             src\u2081    src\u2082               src\u2083\n                                                                                                src\u2082     src\u2082\n     addition               add rdst, rsrc\u2081, rsrc\u2082                                              dst     src\u2081    src\u2082\n     multiplication         mult rdst, rsrc\u2081, rsrc\u2082                                             dst     src\u2081 \u00d7  src\u2082\n     branch                 bne rsrc\u2081, #offset, TARGET                                                              src\u2081\n     (any of the above)     NOP\n                                                              #offset\n                                   N                     is an even positive integer\n                                  r29 r30     r31                                             A B\n      C                        r0                    0             r1                    1\nC code                                    Assembly code\n    // An   i n t e g e r  i s 4  b y t e s  l o n g  LOOP:\n    int A[N+ 1 ] ;                                       ( v1 )  l o a d _ i n c  r2 ,  [ r31 ,  r0 , #0]     //     r2 :=  [ r31 +  r0 + #0];  r0  :=  r0 + 1\n      int  B [N+ 1 ] ;                                   ( v2 )  l o a d      r3 ,  [ r29 ,   r1 ,  #0]       //     r3 :=  [ r29 +  r1 + #0]\n      int  C [N+ 1 ] ;                                   ( v3 )  l o a d      r4 ,  [ r30 ,   r1 ,  #0]       //     r4 :=  [ r30 +  r1 + #0]\n     . . . // code     t o  i n i t i a l i z e A and B  ( v4 ) mult          r5 ,    r2 ,  r 3      //        r5  :=  r2   *   r3\n     f o r (int i =  1 ; i <= N;  i ++)                  ( v5 ) add           r6 ,    r5 ,  r 4      //        r6  :=  r5 +     r4\n           C [ i ] = C [ i =1] * A[ i ] + B [ i ] ;      ( v6 )  s t o r e _ i n c  [ r31 ,  r1 , #0] ,  r 6  // [ r31 +    r1 + #0] :=  r6 ;   r1  :=  r1 + 1\n                                                         ( v7 ) bne           r1 , #N, LOOP          //            branch  t o LOOP  i f r1 not  e q u a l t o #N\n                                                                 (v1)               .. (v7)",
            "md": "# VLIW\n\n# [60 points]\n\n| Functional Unit Type | Operation (in assembly notation)           | Semantics       |\n| -------------------- | ------------------------------------------ | --------------- |\n| load                 | load rdst, \\[rsrc\u2081, rsrc\u2082, #offset]        | dst src\u2081 src\u2082   |\n| load                 | load\\_inc rdst, \\[rsrc\u2081, rsrc\u2082, #offset]   | dst src\u2081 src\u2082   |\n| store                | store \\[rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083      | src\u2081 src\u2082 src\u2083  |\n| store                | store\\_inc \\[rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083 | src\u2081 src\u2082 src\u2083  |\n| addition             | add rdst, rsrc\u2081, rsrc\u2082                     | dst src\u2081 src\u2082   |\n| multiplication       | mult rdst, rsrc\u2081, rsrc\u2082                    | dst src\u2081 \u00d7 src\u2082 |\n| branch               | bne rsrc\u2081, #offset, TARGET                 | src\u2081            |\n| (any of the above)   | NOP                                        | #offset         |\n\nN is an even positive integer\n\n|   | r29 | r30 | r31 |    |\n| - | --- | --- | --- | -- |\n|   | 0   | r0  | 1   | r1 |\n\n# C code\n\n// An integer is 4 bytes long\nLOOP:\nint A[N+1];                                       (v1) load_inc r2, [r31, r0, #0]     // r2 := [r31 + r0 + #0]; r0 := r0 + 1\nint B[N+1];                                       (v2) load r3, [r29, r1, #0]       // r3 := [r29 + r1 + #0]\nint C[N+1];                                       (v3) load r4, [r30, r1, #0]       // r4 := [r30 + r1 + #0]\n... // code to initialize A and B\n(v4) mult r5, r2, r3      // r5 := r2 * r3\n(v5) add r6, r5, r4        // r6 := r5 + r4\nfor (int i = 1; i <= N; i++) {\nC[i] = C[i-1] * A[i] + B[i];\n}\n(v6) store_inc [r31, r1, #0], r6 // [r31 + r1 + #0] := r6; r1 := r1 + 1\n(v7) bne r1, #N, LOOP      // branch to LOOP if r1 not equal to #N",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "VLIW",
                    "md": "# VLIW",
                    "rows": null,
                    "bBox": {
                        "x": 95.67,
                        "y": 67.62,
                        "w": 43.0,
                        "h": 14.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "[60 points]",
                    "md": "# [60 points]",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 70.85,
                        "w": 164.24,
                        "h": 533.75
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Functional Unit Type | Operation (in assembly notation)           | Semantics       |\n| -------------------- | ------------------------------------------ | --------------- |\n| load                 | load rdst, \\[rsrc\u2081, rsrc\u2082, #offset]        | dst src\u2081 src\u2082   |\n| load                 | load\\_inc rdst, \\[rsrc\u2081, rsrc\u2082, #offset]   | dst src\u2081 src\u2082   |\n| store                | store \\[rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083      | src\u2081 src\u2082 src\u2083  |\n| store                | store\\_inc \\[rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083 | src\u2081 src\u2082 src\u2083  |\n| addition             | add rdst, rsrc\u2081, rsrc\u2082                     | dst src\u2081 src\u2082   |\n| multiplication       | mult rdst, rsrc\u2081, rsrc\u2082                    | dst src\u2081 \u00d7 src\u2082 |\n| branch               | bne rsrc\u2081, #offset, TARGET                 | src\u2081            |\n| (any of the above)   | NOP                                        | #offset         |",
                    "rows": [
                        [
                            "Functional Unit Type",
                            "Operation (in assembly notation)",
                            "Semantics"
                        ],
                        [
                            "load",
                            "load rdst, [rsrc\u2081, rsrc\u2082, #offset]",
                            "dst src\u2081 src\u2082"
                        ],
                        [
                            "load",
                            "load_inc rdst, [rsrc\u2081, rsrc\u2082, #offset]",
                            "dst src\u2081 src\u2082"
                        ],
                        [
                            "store",
                            "store [rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083",
                            "src\u2081 src\u2082 src\u2083"
                        ],
                        [
                            "store",
                            "store_inc [rsrc\u2081, rsrc\u2082, #offset], rsrc\u2083",
                            "src\u2081 src\u2082 src\u2083"
                        ],
                        [
                            "addition",
                            "add rdst, rsrc\u2081, rsrc\u2082",
                            "dst src\u2081 src\u2082"
                        ],
                        [
                            "multiplication",
                            "mult rdst, rsrc\u2081, rsrc\u2082",
                            "dst src\u2081 \u00d7 src\u2082"
                        ],
                        [
                            "branch",
                            "bne rsrc\u2081, #offset, TARGET",
                            "src\u2081"
                        ],
                        [
                            "(any of the above)",
                            "NOP",
                            "#offset"
                        ]
                    ],
                    "bBox": {
                        "x": 75.98,
                        "y": 165.55,
                        "w": 461.29,
                        "h": 470.62
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "N is an even positive integer",
                    "md": "N is an even positive integer",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 505.62,
                        "w": 413.78,
                        "h": 98.98
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|   | r29 | r30 | r31 |    |\n| - | --- | --- | --- | -- |\n|   | 0   | r0  | 1   | r1 |",
                    "rows": [
                        [
                            "",
                            "r29",
                            "r30",
                            "r31",
                            ""
                        ],
                        [
                            "",
                            "0",
                            "r0",
                            "1",
                            "r1"
                        ]
                    ],
                    "bBox": {
                        "x": 60.81,
                        "y": 67.62,
                        "w": 476.46,
                        "h": 584.76
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "C code",
                    "md": "# C code",
                    "rows": null,
                    "bBox": {
                        "x": 60.81,
                        "y": 558.21,
                        "w": 59.4,
                        "h": 54.28
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "// An integer is 4 bytes long\nLOOP:\nint A[N+1];                                       (v1) load_inc r2, [r31, r0, #0]     // r2 := [r31 + r0 + #0]; r0 := r0 + 1\nint B[N+1];                                       (v2) load r3, [r29, r1, #0]       // r3 := [r29 + r1 + #0]\nint C[N+1];                                       (v3) load r4, [r30, r1, #0]       // r4 := [r30 + r1 + #0]\n... // code to initialize A and B\n(v4) mult r5, r2, r3      // r5 := r2 * r3\n(v5) add r6, r5, r4        // r6 := r5 + r4\nfor (int i = 1; i <= N; i++) {\nC[i] = C[i-1] * A[i] + B[i];\n}\n(v6) store_inc [r31, r1, #0], r6 // [r31 + r1 + #0] := r6; r1 := r1 + 1\n(v7) bne r1, #N, LOOP      // branch to LOOP if r1 not equal to #N",
                    "md": "// An integer is 4 bytes long\nLOOP:\nint A[N+1];                                       (v1) load_inc r2, [r31, r0, #0]     // r2 := [r31 + r0 + #0]; r0 := r0 + 1\nint B[N+1];                                       (v2) load r3, [r29, r1, #0]       // r3 := [r29 + r1 + #0]\nint C[N+1];                                       (v3) load r4, [r30, r1, #0]       // r4 := [r30 + r1 + #0]\n... // code to initialize A and B\n(v4) mult r5, r2, r3      // r5 := r2 * r3\n(v5) add r6, r5, r4        // r6 := r5 + r4\nfor (int i = 1; i <= N; i++) {\nC[i] = C[i-1] * A[i] + B[i];\n}\n(v6) store_inc [r31, r1, #0], r6 // [r31 + r1 + #0] := r6; r1 := r1 + 1\n(v7) bne r1, #N, LOOP      // branch to LOOP if r1 not equal to #N",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 458.46,
                        "h": 584.76
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 22,
            "text": "                                 ll in Table 2\n          minimize the number of VLIW instructions\n                     as soon as possible\n                                                  Functional Unit\nLoad                       Load                   Load                   Store                       Mult            Add            Branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                               not  NOP\n  7\n   ~~5~~  \n Explanation.\n                                                      NOPs\n\n                                                               N\n Execution time =          5 \u00d7 N\n Explanation.\n                                                                                       N\n                                            5 \u00d7 N",
            "md": "# ll in Table 2\n\nminimize the number of VLIW instructions as soon as possible\n\n| Functional Unit | Load | Load | Load | Store | Mult | Add | Branch |\n| --------------- | ---- | ---- | ---- | ----- | ---- | --- | ------ |\n\nnot NOP\n\nExplanation.\n\nNOPs\n\nExecution time = 5 \u00d7 N\n\nExplanation.\n\nN\n\n5 \u00d7 N",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "ll in Table 2",
                    "md": "# ll in Table 2",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 113.84,
                        "w": 426.55,
                        "h": 554.31
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "minimize the number of VLIW instructions as soon as possible",
                    "md": "minimize the number of VLIW instructions as soon as possible",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 131.78,
                        "w": 426.18,
                        "h": 536.38
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Functional Unit | Load | Load | Load | Store | Mult | Add | Branch |\n| --------------- | ---- | ---- | ---- | ----- | ---- | --- | ------ |",
                    "rows": [
                        [
                            "Functional Unit",
                            "Load",
                            "Load",
                            "Load",
                            "Store",
                            "Mult",
                            "Add",
                            "Branch"
                        ]
                    ],
                    "bBox": {
                        "x": 109.63,
                        "y": 182.16,
                        "w": 380.33,
                        "h": 17.1
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "not NOP\n\nExplanation.\n\nNOPs\n\nExecution time = 5 \u00d7 N\n\nExplanation.\n\nN\n\n5 \u00d7 N",
                    "md": "not NOP\n\nExplanation.\n\nNOPs\n\nExecution time = 5 \u00d7 N\n\nExplanation.\n\nN\n\n5 \u00d7 N",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 418.75,
                        "w": 425.16,
                        "h": 261.36
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 23,
            "text": "10     Cache      [50 points]\n\n\n                                             \u2192     \u2192\n       only\n\n                             please give the lowest possible addresses that can enable the identication of the num-\n      ber of sets and ways\n           0 \u2192   2\n           Explanation.\n                 [0 \u2192  2]\n                 [0 \u2192  4]\n\n\n\n                (4 sets, 1 way)\n                 4\n                 2\n                (2 sets, 2 ways)\n                 4  2\n                (1 set, 4 ways)\n                 0  2    4\n                                                                      just two\n                         dierent\n\n                 [0 \u2192  2]\n                   0      2\n                    0      2\n                    0     2\n                 [0 \u2192  4]\n                   0      4\n                    0      4\n                    0     4\n                                                                          0 \u2192  2",
            "md": "# 10 Cache [50 points]\n\nonly\n\nplease give the lowest possible addresses that can enable the identification of the number of sets and ways\n\n0 \u2192 2Explanation.[0 \u2192 2][0 \u2192 4]\n(4 sets, 1 way)\n\n| 4 | 2 |\n| - | - |\n\n(2 sets, 2 ways)\n\n| 4 | 2 |\n| - | - |\n\n(1 set, 4 ways)\n\n| 0 | 2 | 4 |\n| - | - | - |\n\njust two different\n\n| \\[0 \u2192 2] | 0 | 2 |\n| -------- | - | - |\n| 0        | 2 |   |\n| 0        | 2 |   |\n\n| \\[0 \u2192 4] | 0 | 4 |\n| -------- | - | - |\n| 0        | 4 |   |\n| 0        | 4 |   |\n\n0 \u2192 2",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "10 Cache [50 points]",
                    "md": "# 10 Cache [50 points]",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 131.06,
                        "h": 442.76
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "only\n\nplease give the lowest possible addresses that can enable the identification of the number of sets and ways\n\n0 \u2192 2Explanation.[0 \u2192 2][0 \u2192 4]\n(4 sets, 1 way)",
                    "md": "only\n\nplease give the lowest possible addresses that can enable the identification of the number of sets and ways\n\n0 \u2192 2Explanation.[0 \u2192 2][0 \u2192 4]\n(4 sets, 1 way)",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 135.66,
                        "w": 451.01,
                        "h": 575.1
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 4 | 2 |\n| - | - |",
                    "rows": [
                        [
                            "4",
                            "2"
                        ]
                    ],
                    "bBox": {
                        "x": 140.14,
                        "y": 252.67,
                        "w": 285.88,
                        "h": 458.09
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "(2 sets, 2 ways)",
                    "md": "(2 sets, 2 ways)",
                    "rows": null,
                    "bBox": {
                        "x": 140.14,
                        "y": 252.67,
                        "w": 285.88,
                        "h": 458.09
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 4 | 2 |\n| - | - |",
                    "rows": [
                        [
                            "4",
                            "2"
                        ]
                    ],
                    "bBox": {
                        "x": 140.14,
                        "y": 252.67,
                        "w": 285.88,
                        "h": 458.09
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "(1 set, 4 ways)",
                    "md": "(1 set, 4 ways)",
                    "rows": null,
                    "bBox": {
                        "x": 140.14,
                        "y": 392.08,
                        "w": 72.76,
                        "h": 118.29
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 0 | 2 | 4 |\n| - | - | - |",
                    "rows": [
                        [
                            "0",
                            "2",
                            "4"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 354.02,
                        "h": 643.14
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "just two different",
                    "md": "just two different",
                    "rows": null,
                    "bBox": {
                        "x": 384.44,
                        "y": 536.34,
                        "w": 117.18,
                        "h": 10.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| \\[0 \u2192 2] | 0 | 2 |\n| -------- | - | - |\n| 0        | 2 |   |\n| 0        | 2 |   |",
                    "rows": [
                        [
                            "[0 \u2192 2]",
                            "0",
                            "2"
                        ],
                        [
                            "0",
                            "2",
                            ""
                        ],
                        [
                            "0",
                            "2",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.08,
                        "h": 643.14
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| \\[0 \u2192 4] | 0 | 4 |\n| -------- | - | - |\n| 0        | 4 |   |\n| 0        | 4 |   |",
                    "rows": [
                        [
                            "[0 \u2192 4]",
                            "0",
                            "4"
                        ],
                        [
                            "0",
                            "4",
                            ""
                        ],
                        [
                            "0",
                            "4",
                            ""
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.08,
                        "h": 643.14
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "0 \u2192 2",
                    "md": "0 \u2192 2",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 135.66,
                        "w": 307.8,
                        "h": 575.1
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 24,
            "text": "NO_CONTENT_HERE",
            "md": "NO_CONTENT_HERE",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "text",
                    "lvl": null,
                    "value": "NO_CONTENT_HERE",
                    "md": "NO_CONTENT_HERE",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                }
            ],
            "status": "WARNING",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": true,
            "noTextContent": true
        },
        {
            "page": 25,
            "text": "11      BONUS: Systolic Arrays                  [50 points]\n                                 2 \u00d7 2\n                                               H0 H1    V0 V1\n                                                                                             reg\n                                                                                                       c\n                                                           c + 1\n                                          i0   o0           i1   o1\n\n\n                                                                                      C = A \u00d7 B\nA B     C        2 \u00d7 2                                                  K \u00d7 K\n                                                K\u22121\n                                         Cij = X Aik \u00d7 Bkj\n                                                k=0\n                  K = 2                     C00\n                                     C00 = A00 \u00d7 B00 + A01 \u00d7 B10\n                                       A2\u00d72    B2\u00d72\n                      H0 H1    V0 V1\n                                     C2\u00d72\n\n                          cycle   H0 H1 V0 V1 PE00 PE01 PE10 PE11\n                                  A00      B00\n                                  A01 A10 B10 B01\n                                      A11      B11   C00\n                                                            C01   C10\n                                                                        C11",
            "md": "# 11 BONUS: Systolic Arrays\n\n| 2 \u00d7 2 | H0 | H1    | V0 | V1 |    |    |\n| ----- | -- | ----- | -- | -- | -- | -- |\n| reg   | c  | c + 1 | i0 | o0 | i1 | o1 |\n\nC = A \u00d7 B\n\nA B C 2 \u00d7 2\n\nK \u00d7 K\n\nK\u22121\n\nCij = \u03a3 Aik \u00d7 Bkj\n\nk=0\n\nK = 2\n\nC00\n\nC00 = A00 \u00d7 B00 + A01 \u00d7 B10\n\nA2\u00d72 B2\u00d72\n\n|   |   | H0  | H1  | V0  | V1  | PE00 | PE01 | PE10 | PE11 |     |     |     |\n| - | - | --- | --- | --- | --- | ---- | ---- | ---- | ---- | --- | --- | --- |\n|   |   | A00 | B00 | A01 | B10 | B01  | A11  | B11  | C00  | C01 | C10 | C11 |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "11 BONUS: Systolic Arrays",
                    "md": "# 11 BONUS: Systolic Arrays",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.51,
                        "h": 90.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| 2 \u00d7 2 | H0 | H1    | V0 | V1 |    |    |\n| ----- | -- | ----- | -- | -- | -- | -- |\n| reg   | c  | c + 1 | i0 | o0 | i1 | o1 |",
                    "rows": [
                        [
                            "2 \u00d7 2",
                            "H0",
                            "H1",
                            "V0",
                            "V1",
                            "",
                            ""
                        ],
                        [
                            "reg",
                            "c",
                            "c + 1",
                            "i0",
                            "o0",
                            "i1",
                            "o1"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.63,
                        "h": 579.43
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "C = A \u00d7 B\n\nA B C 2 \u00d7 2\n\nK \u00d7 K\n\nK\u22121\n\nCij = \u03a3 Aik \u00d7 Bkj\n\nk=0\n\nK = 2\n\nC00\n\nC00 = A00 \u00d7 B00 + A01 \u00d7 B10\n\nA2\u00d72 B2\u00d72",
                    "md": "C = A \u00d7 B\n\nA B C 2 \u00d7 2\n\nK \u00d7 K\n\nK\u22121\n\nCij = \u03a3 Aik \u00d7 Bkj\n\nk=0\n\nK = 2\n\nC00\n\nC00 = A00 \u00d7 B00 + A01 \u00d7 B10\n\nA2\u00d72 B2\u00d72",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 93.82,
                        "w": 451.53,
                        "h": 527.81
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "|   |   | H0  | H1  | V0  | V1  | PE00 | PE01 | PE10 | PE11 |     |     |     |\n| - | - | --- | --- | --- | --- | ---- | ---- | ---- | ---- | --- | --- | --- |\n|   |   | A00 | B00 | A01 | B10 | B01  | A11  | B11  | C00  | C01 | C10 | C11 |",
                    "rows": [
                        [
                            "",
                            "",
                            "H0",
                            "H1",
                            "V0",
                            "V1",
                            "PE00",
                            "PE01",
                            "PE10",
                            "PE11",
                            "",
                            "",
                            ""
                        ],
                        [
                            "",
                            "",
                            "A00",
                            "B00",
                            "A01",
                            "B10",
                            "B01",
                            "A11",
                            "B11",
                            "C00",
                            "C01",
                            "C10",
                            "C11"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 451.63,
                        "h": 579.43
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 26,
            "text": "                                                4 \u00d7 4\n\n\n19 cycles.\n                                                         4 \u00d7 4 = 16\n\n                        11\n\n\n                                   7 + 3 \u00d7 4 = 19\n               cycle  H0 H1 V0 V1 PE00 PE01 PE10 PE11\n                      A00      B00\n                      A01 A10 B10 B01\n                      A02 A11 B20 B11\n                      A03 A12 B30 B21\n                      A00 A13 B02 B31    C00\n                      A01 A10 B12 B03           C01   C10\n                      A02 A11 B22 B13                       C11\n                      A03 A12 B32 B23\n                      A20 A13 B00 B33    C02\n                      A21 A30 B10 B01           C03   C12\n                      A22 A31 B20 B11                       C13\n                      A23 A32 B30 B21\n                      A20 A33 B02 B31    C20\n                      A21 A30 B12 B03           C21   C30\n                      A22 A31 B22 B13                       C31\n                      A23 A32 B32 B23\n                           A33     B33   C22\n                                                C23   C32\n                                                            C33",
            "md": "# 4 \u00d7 4\n\n19 cycles.\n\n4 \u00d7 4 = 16\n\n# 11\n\n7 + 3 \u00d7 4 = 19\n\n| cycle | H0  | H1  | V0  | V1  | PE00 | PE01 | PE10 | PE11 |\n| ----- | --- | --- | --- | --- | ---- | ---- | ---- | ---- |\n| A00   | B00 |     |     |     |      |      |      |      |\n| A01   | A10 | B10 | B01 |     |      |      |      |      |\n| A02   | A11 | B20 | B11 |     |      |      |      |      |\n| A03   | A12 | B30 | B21 |     |      |      |      |      |\n| A00   | A13 | B02 | B31 | C00 |      |      |      |      |\n| A01   | A10 | B12 | B03 | C01 | C10  |      |      |      |\n| A02   | A11 | B22 | B13 |     | C11  |      |      |      |\n| A03   | A12 | B32 | B23 |     |      |      |      |      |\n| A20   | A13 | B00 | B33 | C02 |      |      |      |      |\n| A21   | A30 | B10 | B01 | C03 | C12  |      |      |      |\n| A22   | A31 | B20 | B11 |     | C13  |      |      |      |\n| A23   | A32 | B30 | B21 |     |      |      |      |      |\n| A20   | A33 | B02 | B31 | C20 |      |      |      |      |\n| A21   | A30 | B12 | B03 | C21 | C30  |      |      |      |\n| A22   | A31 | B22 | B13 |     | C31  |      |      |      |\n| A23   | A32 | B32 | B23 |     |      |      |      |      |\n| A33   | B33 | C22 |     | C23 |      | C32  |      | C33  |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "4 \u00d7 4",
                    "md": "# 4 \u00d7 4",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 83.96,
                        "w": 426.11,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "19 cycles.\n\n4 \u00d7 4 = 16",
                    "md": "19 cycles.\n\n4 \u00d7 4 = 16",
                    "rows": null,
                    "bBox": {
                        "x": 96.91,
                        "y": 83.96,
                        "w": 426.11,
                        "h": 359.27
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "11",
                    "md": "# 11",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 279.08,
                        "w": 200.55,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "7 + 3 \u00d7 4 = 19",
                    "md": "7 + 3 \u00d7 4 = 19",
                    "rows": null,
                    "bBox": {
                        "x": 118.23,
                        "y": 338.86,
                        "w": 220.67,
                        "h": 10.0
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| cycle | H0  | H1  | V0  | V1  | PE00 | PE01 | PE10 | PE11 |\n| ----- | --- | --- | --- | --- | ---- | ---- | ---- | ---- |\n| A00   | B00 |     |     |     |      |      |      |      |\n| A01   | A10 | B10 | B01 |     |      |      |      |      |\n| A02   | A11 | B20 | B11 |     |      |      |      |      |\n| A03   | A12 | B30 | B21 |     |      |      |      |      |\n| A00   | A13 | B02 | B31 | C00 |      |      |      |      |\n| A01   | A10 | B12 | B03 | C01 | C10  |      |      |      |\n| A02   | A11 | B22 | B13 |     | C11  |      |      |      |\n| A03   | A12 | B32 | B23 |     |      |      |      |      |\n| A20   | A13 | B00 | B33 | C02 |      |      |      |      |\n| A21   | A30 | B10 | B01 | C03 | C12  |      |      |      |\n| A22   | A31 | B20 | B11 |     | C13  |      |      |      |\n| A23   | A32 | B30 | B21 |     |      |      |      |      |\n| A20   | A33 | B02 | B31 | C20 |      |      |      |      |\n| A21   | A30 | B12 | B03 | C21 | C30  |      |      |      |\n| A22   | A31 | B22 | B13 |     | C31  |      |      |      |\n| A23   | A32 | B32 | B23 |     |      |      |      |      |\n| A33   | B33 | C22 |     | C23 |      | C32  |      | C33  |",
                    "rows": [
                        [
                            "cycle",
                            "H0",
                            "H1",
                            "V0",
                            "V1",
                            "PE00",
                            "PE01",
                            "PE10",
                            "PE11"
                        ],
                        [
                            "A00",
                            "B00",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A01",
                            "A10",
                            "B10",
                            "B01",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A02",
                            "A11",
                            "B20",
                            "B11",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A03",
                            "A12",
                            "B30",
                            "B21",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A00",
                            "A13",
                            "B02",
                            "B31",
                            "C00",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A01",
                            "A10",
                            "B12",
                            "B03",
                            "C01",
                            "C10",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A02",
                            "A11",
                            "B22",
                            "B13",
                            "",
                            "C11",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A03",
                            "A12",
                            "B32",
                            "B23",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A20",
                            "A13",
                            "B00",
                            "B33",
                            "C02",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A21",
                            "A30",
                            "B10",
                            "B01",
                            "C03",
                            "C12",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A22",
                            "A31",
                            "B20",
                            "B11",
                            "",
                            "C13",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A23",
                            "A32",
                            "B30",
                            "B21",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A20",
                            "A33",
                            "B02",
                            "B31",
                            "C20",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A21",
                            "A30",
                            "B12",
                            "B03",
                            "C21",
                            "C30",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A22",
                            "A31",
                            "B22",
                            "B13",
                            "",
                            "C31",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A23",
                            "A32",
                            "B32",
                            "B23",
                            "",
                            "",
                            "",
                            "",
                            ""
                        ],
                        [
                            "A33",
                            "B33",
                            "C22",
                            "",
                            "C23",
                            "",
                            "C32",
                            "",
                            "C33"
                        ]
                    ],
                    "bBox": {
                        "x": 96.91,
                        "y": 83.96,
                        "w": 426.11,
                        "h": 603.21
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 27,
            "text": "12     BONUS: Prefetching              [50 points]\n\n                                                                           cacheblock addresses\nProgram A\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64\nProgram B\nb, b + 2, b + 4, ...., b + 998, b + 1000\n\n\n                                     Machine M1            Machine M2\n\n\n\n\n\n                                                                       A + 1\n          A\n                                                                       A +4\n          A\n\n\n\n\n                        A +4                                                            A    A +2\n\n\n     Machine M1:\n     Machine M2:",
            "md": "# 12 BONUS: Prefetching\n\n[50 points]\n\n# cacheblock addresses\n\n# Program A\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64\n\n# Program B\n\nb, b + 2, b + 4, ...., b + 998, b + 1000\n\n# Machine M1\n\n# Machine M2\n\n| A     | A + 1 |\n| ----- | ----- |\n| A + 4 | A + 2 |\n",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "12 BONUS: Prefetching",
                    "md": "# 12 BONUS: Prefetching",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 67.62,
                        "w": 176.47,
                        "h": 14.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "[50 points]",
                    "md": "[50 points]",
                    "rows": null,
                    "bBox": {
                        "x": 253.6,
                        "y": 70.85,
                        "w": 52.45,
                        "h": 10.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "cacheblock addresses",
                    "md": "# cacheblock addresses",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 117.73,
                        "w": 450.89,
                        "h": 339.2
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Program A",
                    "md": "# Program A",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 147.62,
                        "w": 148.17,
                        "h": 309.31
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64",
                    "md": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64,\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 165.55,
                        "w": 451.31,
                        "h": 291.38
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Program B",
                    "md": "# Program B",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 207.39,
                        "w": 152.63,
                        "h": 249.53
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "b, b + 2, b + 4, ...., b + 998, b + 1000",
                    "md": "b, b + 2, b + 4, ...., b + 998, b + 1000",
                    "rows": null,
                    "bBox": {
                        "x": 72.0,
                        "y": 225.33,
                        "w": 239.19,
                        "h": 10.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Machine M1",
                    "md": "# Machine M1",
                    "rows": null,
                    "bBox": {
                        "x": 118.82,
                        "y": 289.83,
                        "w": 189.07,
                        "h": 167.1
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Machine M2",
                    "md": "# Machine M2",
                    "rows": null,
                    "bBox": {
                        "x": 118.82,
                        "y": 289.83,
                        "w": 293.11,
                        "h": 167.1
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| A     | A + 1 |\n| ----- | ----- |\n| A + 4 | A + 2 |",
                    "rows": [
                        [
                            "A",
                            "A + 1"
                        ],
                        [
                            "A + 4",
                            "A + 2"
                        ]
                    ],
                    "bBox": {
                        "x": 72.0,
                        "y": 117.73,
                        "w": 451.64,
                        "h": 562.5
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        },
        {
            "page": 28,
            "text": "M1:\nM2:\nExplanation\nWe calculate the accuracy and coverage for all three types of prefetchers, and then we can answer what\nprefetcher each machine is using. Underlined and red-marked cacheline addresses are correctly and incorrectly\nprefetched, respectively.\nEach prefetcher works in the following way while running Application A:\nStride: Coverage: 1/3, Accuracy: 9/26\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 12, a + 24, a + 48, a + 96)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48,\na + 96)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48,\na + 96)\n1st-next-line: Coverage: 4/9, Accuracy: 4/9\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n4th-next-line:    Coverage: 6/27, Accuracy: 6/27\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20,\na + 36, a + 68)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20,\na + 36, a + 68)\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a\n+ 36, a + 68)\nThe three prefetechers work in the following way while running Application B:\nStride: Coverage: 499/501, Accuracy: 499/500\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002)\n1st-next-line: Coverage: 0, Accuracy: 0\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ... , b + 998, b + 1000 (incorrect: b + 1, b + 3, ..., b + 999, b + 1001)\n4th-next-line:    Coverage: 499/501, Accuracy: 499/501\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b +1002, b + 1004)",
            "md": "# Explanation\n\nWe calculate the accuracy and coverage for all three types of prefetchers, and then we can answer what prefetcher each machine is using. Underlined and red-marked cacheline addresses are correctly and incorrectly prefetched, respectively.\n\n# Application A\n\n# Stride\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 1/3      | 9/26     |\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)\n\n# 1st-next-line\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 4/9      | 4/9      |\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\n# 4th-next-line\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 6/27     | 6/27     |\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\n# Application B\n\n# Stride\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 499/501  | 499/500  |\n\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002)\n\n# 1st-next-line\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 0        | 0        |\n\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ... , b + 998, b + 1000 (incorrect: b + 1, b + 3, ..., b + 999, b + 1001)\n\n# 4th-next-line\n\n| Coverage | Accuracy |\n| -------- | -------- |\n| 499/501  | 499/501  |\n\nb, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002, b + 1004)",
            "images": [],
            "charts": [],
            "tables": [],
            "layout": [],
            "items": [
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Explanation",
                    "md": "# Explanation",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 218.07,
                        "w": 60.0,
                        "h": 10.0
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "We calculate the accuracy and coverage for all three types of prefetchers, and then we can answer what prefetcher each machine is using. Underlined and red-marked cacheline addresses are correctly and incorrectly prefetched, respectively.",
                    "md": "We calculate the accuracy and coverage for all three types of prefetchers, and then we can answer what prefetcher each machine is using. Underlined and red-marked cacheline addresses are correctly and incorrectly prefetched, respectively.",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.86,
                        "h": 26.93
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Application A",
                    "md": "# Application A",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Stride",
                    "md": "# Stride",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 1/3      | 9/26     |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "1/3",
                            "9/26"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.8,
                        "h": 367.34
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)",
                    "md": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a - 64, a + 5, a + 12, a + 24, a + 48, a + 96)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 297.81,
                        "w": 406.38,
                        "h": 45.86
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "1st-next-line",
                    "md": "# 1st-next-line",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 4/9      | 4/9      |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "4/9",
                            "4/9"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.8,
                        "h": 367.34
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)",
                    "md": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 9, a + 17, a + 33, a + 65)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 364.56,
                        "w": 406.38,
                        "h": 26.93
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "4th-next-line",
                    "md": "# 4th-next-line",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 6/27     | 6/27     |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "6/27",
                            "6/27"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.8,
                        "h": 367.34
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)",
                    "md": "a, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64, (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)\n\na, a + 1, a + 2, a + 3, a + 4, a + 8, a + 16, a + 32, a + 64 (incorrect: a + 5, a + 6, a + 7, a + 12, a + 20, a + 36, a + 68)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 421.84,
                        "w": 406.33,
                        "h": 55.32
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Application B",
                    "md": "# Application B",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "Stride",
                    "md": "# Stride",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 499/501  | 499/500  |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "499/501",
                            "499/500"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.8,
                        "h": 367.34
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002)",
                    "md": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 543.54,
                        "w": 308.33,
                        "h": 8.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "1st-next-line",
                    "md": "# 1st-next-line",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 0        | 0        |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "0",
                            "0"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 406.33,
                        "h": 376.81
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ... , b + 998, b + 1000 (incorrect: b + 1, b + 3, ..., b + 999, b + 1001)",
                    "md": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ... , b + 998, b + 1000 (incorrect: b + 1, b + 3, ..., b + 999, b + 1001)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 572.43,
                        "w": 405.92,
                        "h": 8.0
                    }
                },
                {
                    "type": "heading",
                    "lvl": 1,
                    "value": "4th-next-line",
                    "md": "# 4th-next-line",
                    "rows": null,
                    "bBox": {
                        "x": 0.0,
                        "y": 0.0,
                        "w": 595.28,
                        "h": 841.89
                    }
                },
                {
                    "type": "table",
                    "lvl": null,
                    "value": null,
                    "md": "| Coverage | Accuracy |\n| -------- | -------- |\n| 499/501  | 499/501  |",
                    "rows": [
                        [
                            "Coverage",
                            "Accuracy"
                        ],
                        [
                            "499/501",
                            "499/501"
                        ]
                    ],
                    "bBox": {
                        "x": 94.57,
                        "y": 232.52,
                        "w": 405.8,
                        "h": 367.34
                    }
                },
                {
                    "type": "text",
                    "lvl": null,
                    "value": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002, b + 1004)",
                    "md": "b, b + 2, b + 4, b + 6, b + 8, b + 10, ..., b + 998, b + 1000 (incorrect: b + 1002, b + 1004)",
                    "rows": null,
                    "bBox": {
                        "x": 94.57,
                        "y": 601.32,
                        "w": 344.55,
                        "h": 8.0
                    }
                }
            ],
            "status": "OK",
            "links": [],
            "width": 595.276,
            "height": 841.89,
            "triggeredAutoMode": false,
            "parsingMode": "accurate",
            "structuredData": null,
            "noStructuredContent": false,
            "noTextContent": false
        }
    ],
    "job_metadata": {
        "job_pages": 0,
        "job_auto_mode_triggered_pages": 0,
        "job_is_cache_hit": true
    },
    "file_name": "data/ddca-s23-en-sol.pdf",
    "job_id": "774b22ef-bc9b-4848-a6f5-ccf531acfe7a",
    "is_done": false,
    "error": null
}