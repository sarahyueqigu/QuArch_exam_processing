{
  "exam_name": "Computer Architecture Exam.pdf",
  "problem": "Q1. Single-Cycle MIPS Processor",
  "problem_context": "We wish to add the instruction jalr (jump and link register) to the single-cycle datapath. The jump and link register instruction is described below:\n\njalr rd, rs # rd = pc + 4 , pc = rs\n\nop6 = 0 rs5 0 rd5 0 Funct6 = 0x9",
  "problem_figures": [],
  "parts": [
    {
      "part": "a",
      "subproblem": [
        {
          "subproblem_question": "Add any necessary datapath and control signals and draw the result datapath. You should only add wires, gates, muxes to the datapath; do not modify the main functional units (the memory, register file, and ALU) themselves. Try to keep your diagram neat!",
          "subproblem_figures": []
        }
      ],
      "answer": [
        {
          "solution": "The necessary changes to the datapath and control:\n\nFor the datapath, we need a bigger 4­input multiplexer at the input of the PC. The first input is used to increment the PC. The second input is used for taken branches, where the branch target is PC­relative. The third input is used to jump register, where the input to the PC comes from a general­purpose register, and the fourth input is used for jump instructions.\n\nFor the implementation of the JALR instruction: to jump to register 'Rs', we need to add a path from the output of register Rs (first ALU input) back to the PC multiplexer input. PC control unit needs to be updated by adding an input control signal JReg (Jump Register) to select PC according to the value of register Rs. JReg is generated by the ALU control unit, since JALR is a R­type instruction and JReg depends on the function field only. When JReg is equal to '1', PCSrc (PC control unit output control signal) will be '10' to select the value of register Rs as input to PC.\n\nAlso, we need to store PC+4 in register Rd. To accomplish this, we need another multiplexer to select between the incremented PC, the ALU result and data memory out, to be placed on BusW. Also, we need to add a path from the output of the incremented PC to the input of this new multiplexer. A control signal 'RA' (Return Address) is needed to select between the incremented PC and the ALU result. The MemtoReg multiplexer selects between the output of the 'RA' multiplexer and the Data Memory output to place on BusW.",
          "solution_figures": []
        }
      ]
    },
    {
      "part": "b",
      "subproblem": [
        {
          "subproblem_context": "Use the following table for ALUCtrl.\n\nALU function 4-bit ALU Control\n\nAND 0001\n\nOR 0010\n\nXOR 0011\n\nADD 0100\n\nSUB 0101\n\nSLT 0110",
          "subproblem_question": "Show the values of the control signals to control the execution of the jalr instruction. If you need add a new control signal, please add it along with its value to the table below.",
          "subproblem_figures": []
        }
      ],
      "answer": [
        {
          "solution": "The main control signals for the JALR instruction are the same for other R­type instructions, such as ADD and SUB. The ALU Control signals for the JALR instruction require JReg = 1, RA = 0 and ALUCtrl is a don't care. These control signals are shown in the table below:\n\nRegDst RegWrite ExtOp ALUSrc MemRead MemWrite MemtoReg ALUCtrl J Beq Bne RA JReg\nRd = 1 1 X X 0 0 0 XXXX 0 0 0 0 1",
          "solution_figures": []
        }
      ]
    }
  ]
}