{
  "exam_name": "Computer Architecture Exam.pdf",
  "problem": "Q2. Processor Performance",
  "problem_context": "Suppose we add the multiply and divide instructions. The operation times are as follows:\n\nInstruction memory access time = 190 ps,      Data memory access time = 190 ps,\nRegister file read access time = 150 ps,  Register file write access = 150 ps\nALU delay for basic instructions = 190 ps,      ALU delay for multiply or divide = 550 ps\nIgnore the other delays in the multiplexers, control unit, sign-extension, etc.\n\nAssume the following instruction mix: 30% ALU, 15% multiply & divide, 20% load, 10% store, 15% branch, and 10% jump.",
  "problem_figures": [
    "extracted_problems/CDA 4205 Computer Architecture Exam 2 Practice Solution-3/Q2/chart_p1_0.png"
  ],
  "parts": [
    {
      "part": "a",
      "subproblem": [
        {
          "subproblem_question": "What is the total delay for each instruction class and the clock cycle for the single-cycle CPU design?",
          "subproblem_figures": [
            "extracted_problems/CDA 4205 Computer Architecture Exam 2 Practice Solution-3/Q2/img_p1_1.png"
          ]
        }
      ],
      "answer": [
        {
          "solution": "Clock cycle = max delay = 1040 ps.",
          "solution_figures": []
        }
      ]
    },
    {
      "part": "b",
      "subproblem": [
        {
          "subproblem_question": "Assume we fix the clock cycle to 200 ps for a multi-cycle CPU, what is the CPI for each instruction class and the speedup over a fixed-length clock cycle?",
          "subproblem_figures": [
            "extracted_problems/CDA 4205 Computer Architecture Exam 2 Practice Solution-3/Q2/chart_p1_1.png"
          ]
        }
      ],
      "answer": [
        {
          "solution": "Solution:\nCPI for Basic ALU = 4 cycles\nCPI for Multiply & Divide = 6 cycles \nCPI for Load = 5 cycles\nCPI for Store = 4 cycles\nCPI for Branch = 3 cycles\nCPI for Jump = 2 cycles\n\nAverage CPI = 0.3 * 4 + 0.15 * 6 + 0.2* 5 + 0.1 * 4 + 0.15 * 3 + 0.1 * 2 = 4.15\n\nSpeedup of multi-cycle over single-cycle = (1040 * 1) / (200 * 4.15) = 1.253",
          "solution_figures": []
        }
      ]
    }
  ]
}